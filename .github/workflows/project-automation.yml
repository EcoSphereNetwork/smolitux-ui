name: Reusable Project Automation

on:
  workflow_call:
    inputs:
      project-name:
        description: 'GitHub project name'
        required: false
        type: string
        default: 'Main'
      triage-label:
        description: 'Label to apply for triage'
        required: false
        type: string
        default: 'needs-triage'
      welcome-message:
        description: 'Message to post on first-time contributor PRs/issues'
        required: false
        type: string
        default: 'Thanks for your contribution! A maintainer will review it soon.'
      auto-assign:
        description: 'Whether to auto-assign issues/PRs'
        required: false
        type: boolean
        default: true
    secrets:
      PROJECT_TOKEN:
        required: false
        description: 'Token for project board operations'

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - name: Add triage label
        if: github.event_name == 'issues' || github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const payload = context.payload;
            const issue = payload.issue || payload.pull_request;
            
            if (issue && !issue.labels.length) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: ['${{ inputs.triage-label }}']
              });
            }

  welcome:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Check if first contribution
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const creator = context.payload.sender.login;
            const repo = context.repo;
            
            const issues = await github.rest.issues.listForRepo({
              ...repo,
              creator,
              state: 'all'
            });
            
            const prs = await github.rest.pulls.list({
              ...repo,
              state: 'all',
              creator
            });
            
            return issues.data.length + prs.data.length <= 1;
            
      - name: Welcome message
        if: steps.check.outputs.result == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const payload = context.payload;
            const issue = payload.issue || payload.pull_request;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: '${{ inputs.welcome-message }}'
            });

  project-board:
    runs-on: ubuntu-latest
    if: inputs.project-name != ''
    steps:
      - name: Add to project
        uses: actions/add-to-project@v0.5.0
        with:
          project-name: ${{ inputs.project-name }}
          github-token: ${{ secrets.PROJECT_TOKEN || github.token }}

  auto-assign:
    runs-on: ubuntu-latest
    if: inputs.auto-assign
    steps:
      - name: Auto-assign
        uses: actions/github-script@v7
        with:
          script: |
            const payload = context.payload;
            const issue = payload.issue || payload.pull_request;
            
            if (!issue.assignees || !issue.assignees.length) {
              const maintainers = await github.rest.repos.listCollaborators({
                owner: context.repo.owner,
                repo: context.repo.repo,
                permission: 'maintain'
              });
              
              if (maintainers.data.length) {
                const randomMaintainer = maintainers.data[Math.floor(Math.random() * maintainers.data.length)];
                
                await github.rest.issues.addAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  assignees: [randomMaintainer.login]
                });
              }
            }