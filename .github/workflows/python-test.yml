name: Reusable Python Test Workflow

on:
  workflow_call:
    inputs:
      python-versions:
        description: 'Python versions to test against'
        required: false
        type: string
        default: '["3.9", "3.10", "3.11"]'
      working-directory:
        description: 'Directory containing the Python project'
        required: false
        type: string
        default: '.'
      coverage-threshold:
        description: 'Minimum code coverage percentage required'
        required: false
        type: number
        default: 80
    secrets:
      CODECOV_TOKEN:
        required: false
        description: 'Token for uploading coverage to Codecov'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}

    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        poetry config virtualenvs.create false
    
    - name: Install dependencies
      run: |
        poetry install --no-interaction --with dev
    
    - name: Run style checks
      run: |
        poetry run ruff check .
        poetry run black --check .
        poetry run mypy .
    
    - name: Run tests with coverage
      run: |
        poetry run pytest --cov=src --cov-report=xml --cov-report=term-missing --cov-fail-under=${{ inputs.coverage-threshold }}
    
    - name: Upload coverage to Codecov
      if: secrets.CODECOV_TOKEN != ''
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: true