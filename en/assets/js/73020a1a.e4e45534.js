"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1304],{2156:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"testing/test-strategy","title":"Teststrategie f\xfcr Smolitux UI","description":"Einf\xfchrung","source":"@site/wiki/testing/test-strategy.md","sourceDirName":"testing","slug":"/testing/test-strategy","permalink":"/smolitux-ui/en/wiki/testing/test-strategy","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/testing/test-strategy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Test Coverage Report","permalink":"/smolitux-ui/en/wiki/testing/test-coverage-report"},"next":{"title":"Teststandards und Best Practices f\xfcr Smolitux UI","permalink":"/smolitux-ui/en/wiki/testing/testing-standards"}}');var i=s(4848),r=s(8453);const l={},o="Teststrategie f\xfcr Smolitux UI",c={},d=[{value:"Einf\xfchrung",id:"einf\xfchrung",level:2},{value:"Testebenen",id:"testebenen",level:2},{value:"1. Unit-Tests",id:"1-unit-tests",level:3},{value:"2. Barrierefreiheitstests",id:"2-barrierefreiheitstests",level:3},{value:"3. Integrationstests",id:"3-integrationstests",level:3},{value:"4. Visuelle Regressionstests",id:"4-visuelle-regressionstests",level:3},{value:"5. End-to-End-Tests",id:"5-end-to-end-tests",level:3},{value:"Testabdeckung",id:"testabdeckung",level:2},{value:"Testautomatisierung",id:"testautomatisierung",level:2},{value:"Continuous Integration",id:"continuous-integration",level:3},{value:"Pre-commit Hooks",id:"pre-commit-hooks",level:3},{value:"Testdaten",id:"testdaten",level:2},{value:"Mock-Daten",id:"mock-daten",level:3},{value:"Test-Utilities",id:"test-utilities",level:3},{value:"Testumgebung",id:"testumgebung",level:2},{value:"Setup",id:"setup",level:3},{value:"Konfiguration",id:"konfiguration",level:3},{value:"Testdokumentation",id:"testdokumentation",level:2},{value:"Testplan",id:"testplan",level:3},{value:"Testberichte",id:"testberichte",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Fehlerbehebung",id:"fehlerbehebung",level:2},{value:"H\xe4ufige Probleme",id:"h\xe4ufige-probleme",level:3},{value:"Ressourcen",id:"ressourcen",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"teststrategie-f\xfcr-smolitux-ui",children:"Teststrategie f\xfcr Smolitux UI"})}),"\n",(0,i.jsx)(n.h2,{id:"einf\xfchrung",children:"Einf\xfchrung"}),"\n",(0,i.jsx)(n.p,{children:"Diese Teststrategie definiert den Ansatz f\xfcr das Testen der Smolitux UI Komponentenbibliothek. Unser Ziel ist es, eine hohe Qualit\xe4t und Zuverl\xe4ssigkeit der Komponenten sicherzustellen, indem wir verschiedene Testebenen und -methoden kombinieren."}),"\n",(0,i.jsx)(n.h2,{id:"testebenen",children:"Testebenen"}),"\n",(0,i.jsx)(n.h3,{id:"1-unit-tests",children:"1. Unit-Tests"}),"\n",(0,i.jsx)(n.p,{children:"Unit-Tests pr\xfcfen die Funktionalit\xe4t einzelner Komponenten in Isolation."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Werkzeuge:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Jest als Test-Runner"}),"\n",(0,i.jsx)(n.li,{children:"React Testing Library f\xfcr komponentenbasierte Tests"}),"\n",(0,i.jsx)(n.li,{children:"jest-axe f\xfcr Barrierefreiheitstests"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Testumfang:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Rendering mit verschiedenen Props"}),"\n",(0,i.jsx)(n.li,{children:"Interaktionen (Klicks, Eingaben, etc.)"}),"\n",(0,i.jsx)(n.li,{children:"Zustands\xe4nderungen"}),"\n",(0,i.jsx)(n.li,{children:"Callback-Aufrufe"}),"\n",(0,i.jsx)(n.li,{children:"Styling und Klassennamen"}),"\n",(0,i.jsx)(n.li,{children:"Barrierefreiheit"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Beispiel:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Button.test.tsx\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Button } from '../Button';\n\ndescribe('Button', () => {\n  test('renders correctly with default props', () => {\n    render(<Button>Click me</Button>);\n    expect(screen.getByRole('button')).toHaveTextContent('Click me');\n  });\n\n  test('calls onClick when clicked', () => {\n    const handleClick = jest.fn();\n    render(<Button onClick={handleClick}>Click me</Button>);\n    fireEvent.click(screen.getByRole('button'));\n    expect(handleClick).toHaveBeenCalledTimes(1);\n  });\n\n  test('is disabled when disabled prop is true', () => {\n    render(<Button disabled>Click me</Button>);\n    expect(screen.getByRole('button')).toBeDisabled();\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-barrierefreiheitstests",children:"2. Barrierefreiheitstests"}),"\n",(0,i.jsx)(n.p,{children:"Spezielle Tests zur \xdcberpr\xfcfung der Barrierefreiheit von Komponenten."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Werkzeuge:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"jest-axe f\xfcr automatisierte Barrierefreiheitstests"}),"\n",(0,i.jsx)(n.li,{children:"cypress-axe f\xfcr E2E-Barrierefreiheitstests"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Testumfang:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ARIA-Attribute"}),"\n",(0,i.jsx)(n.li,{children:"Semantische HTML-Struktur"}),"\n",(0,i.jsx)(n.li,{children:"Tastaturnavigation"}),"\n",(0,i.jsx)(n.li,{children:"Farbkontrast"}),"\n",(0,i.jsx)(n.li,{children:"Screenreader-Kompatibilit\xe4t"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Beispiel:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Button.a11y.test.tsx\nimport React from 'react';\nimport { render } from '@testing-library/react';\nimport { axe, toHaveNoViolations } from 'jest-axe';\nimport { Button } from '../Button';\n\nexpect.extend(toHaveNoViolations);\n\ndescribe('Button Accessibility', () => {\n  test('should not have accessibility violations', async () => {\n    const { container } = render(<Button>Click me</Button>);\n    const results = await axe(container);\n    expect(results).toHaveNoViolations();\n  });\n\n  test('should not have accessibility violations when disabled', async () => {\n    const { container } = render(<Button disabled>Click me</Button>);\n    const results = await axe(container);\n    expect(results).toHaveNoViolations();\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-integrationstests",children:"3. Integrationstests"}),"\n",(0,i.jsx)(n.p,{children:"Integrationstests pr\xfcfen das Zusammenspiel mehrerer Komponenten."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Werkzeuge:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Jest und React Testing Library"}),"\n",(0,i.jsx)(n.li,{children:"Storybook f\xfcr visuelle Tests"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Testumfang:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Komponentenkomposition"}),"\n",(0,i.jsx)(n.li,{children:"Datenaustausch zwischen Komponenten"}),"\n",(0,i.jsx)(n.li,{children:"Komplexe Interaktionen"}),"\n",(0,i.jsx)(n.li,{children:"Zustandsmanagement"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Beispiel:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Form.test.tsx\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Form, Input, Button } from '../index';\n\ndescribe('Form Integration', () => {\n  test('submits form data when button is clicked', () => {\n    const handleSubmit = jest.fn();\n    render(\n      <Form onSubmit={handleSubmit}>\n        <Input name=\"username\" defaultValue=\"testuser\" />\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    );\n    \n    fireEvent.click(screen.getByRole('button'));\n    expect(handleSubmit).toHaveBeenCalledWith({ username: 'testuser' });\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-visuelle-regressionstests",children:"4. Visuelle Regressionstests"}),"\n",(0,i.jsx)(n.p,{children:"Visuelle Tests pr\xfcfen das Erscheinungsbild der Komponenten."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Werkzeuge:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Storybook"}),"\n",(0,i.jsx)(n.li,{children:"Playwright oder Cypress f\xfcr Screenshots"}),"\n",(0,i.jsx)(n.li,{children:"Reg-suit oder Percy f\xfcr visuelle Vergleiche"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Testumfang:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Layout und Styling"}),"\n",(0,i.jsx)(n.li,{children:"Responsives Design"}),"\n",(0,i.jsx)(n.li,{children:"Themes und Farbschemata"}),"\n",(0,i.jsx)(n.li,{children:"Animationen und \xdcberg\xe4nge"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Beispiel:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// visual.test.js\nconst { test, expect } = require('@playwright/test');\n\ntest('Button visual regression', async ({ page }) => {\n  await page.goto('http://localhost:6006/iframe.html?id=core-inputs-button--primary');\n  \n  // Vergleiche Screenshot mit Referenz\n  await expect(page).toHaveScreenshot('button-primary.png');\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"5-end-to-end-tests",children:"5. End-to-End-Tests"}),"\n",(0,i.jsx)(n.p,{children:"E2E-Tests pr\xfcfen die Komponenten in einer realistischen Umgebung."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Werkzeuge:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cypress oder Playwright"}),"\n",(0,i.jsx)(n.li,{children:"Storybook als Testumgebung"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Testumfang:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Benutzerfl\xfcsse"}),"\n",(0,i.jsx)(n.li,{children:"Browserkompatibilit\xe4t"}),"\n",(0,i.jsx)(n.li,{children:"Leistung und Ladezeiten"}),"\n",(0,i.jsx)(n.li,{children:"Netzwerkinteraktionen"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Beispiel:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// button.cy.js\ndescribe('Button Component', () => {\n  beforeEach(() => {\n    cy.visit('http://localhost:6006/iframe.html?id=core-inputs-button--primary');\n  });\n\n  it('should handle click events', () => {\n    cy.get('button').click();\n    // Pr\xfcfe Ergebnis des Klicks\n  });\n\n  it('should be accessible', () => {\n    cy.injectAxe();\n    cy.checkA11y();\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"testabdeckung",children:"Testabdeckung"}),"\n",(0,i.jsx)(n.p,{children:"Wir streben folgende Testabdeckung an:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unit-Tests"}),": >90% Codeabdeckung"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Barrierefreiheitstests"}),": 100% der Komponenten"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integrationstests"}),": Alle wichtigen Komponentenkombinationen"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Visuelle Tests"}),": Alle Komponenten in allen Varianten"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"E2E-Tests"}),": Kritische Benutzerfl\xfcsse"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"testautomatisierung",children:"Testautomatisierung"}),"\n",(0,i.jsx)(n.h3,{id:"continuous-integration",children:"Continuous Integration"}),"\n",(0,i.jsx)(n.p,{children:"Tests werden automatisch bei jedem Pull Request ausgef\xfchrt:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/ci.yml\nname: CI\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main, develop ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup Node.js\n        uses: actions/setup-node@v2\n        with:\n          node-version: '18'\n      - name: Install dependencies\n        run: npm ci\n      - name: Run tests\n        run: npm test\n      - name: Run accessibility tests\n        run: npm run test:a11y\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pre-commit-hooks",children:"Pre-commit Hooks"}),"\n",(0,i.jsx)(n.p,{children:"Lokale Tests vor dem Commit:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'// package.json\n{\n  "husky": {\n    "hooks": {\n      "pre-commit": "lint-staged"\n    }\n  },\n  "lint-staged": {\n    "*.{ts,tsx}": [\n      "eslint --fix",\n      "jest --findRelatedTests"\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"testdaten",children:"Testdaten"}),"\n",(0,i.jsx)(n.h3,{id:"mock-daten",children:"Mock-Daten"}),"\n",(0,i.jsx)(n.p,{children:"F\xfcr konsistente Tests verwenden wir Mock-Daten:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// mocks/data.ts\nexport const mockUser = {\n  id: '1',\n  name: 'Test User',\n  email: 'test@example.com'\n};\n\nexport const mockProducts = [\n  { id: '1', name: 'Product 1', price: 10 },\n  { id: '2', name: 'Product 2', price: 20 }\n];\n"})}),"\n",(0,i.jsx)(n.h3,{id:"test-utilities",children:"Test-Utilities"}),"\n",(0,i.jsx)(n.p,{children:"Wiederverwendbare Test-Utilities:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// test-utils.tsx\nimport React, { ReactElement } from 'react';\nimport { render, RenderOptions } from '@testing-library/react';\nimport { ThemeProvider } from '../ThemeProvider';\n\nconst AllProviders = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <ThemeProvider>\n      {children}\n    </ThemeProvider>\n  );\n};\n\nconst customRender = (\n  ui: ReactElement,\n  options?: Omit<RenderOptions, 'wrapper'>\n) => render(ui, { wrapper: AllProviders, ...options });\n\nexport * from '@testing-library/react';\nexport { customRender as render };\n"})}),"\n",(0,i.jsx)(n.h2,{id:"testumgebung",children:"Testumgebung"}),"\n",(0,i.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// jest.setup.js\nimport '@testing-library/jest-dom';\nimport 'jest-axe/extend-expect';\n\n// Mock f\xfcr window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(),\n    removeListener: jest.fn(),\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"konfiguration",children:"Konfiguration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// jest.config.js\nmodule.exports = {\n  testEnvironment: 'jsdom',\n  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],\n  testMatch: [\n    '**/__tests__/**/*.test.[jt]s?(x)',\n    '**/?(*.)+(spec|test).[jt]s?(x)'\n  ],\n  testPathIgnorePatterns: ['/node_modules/', '/.next/'],\n  transform: {\n    '^.+\\\\.(ts|tsx)$': 'ts-jest',\n  },\n  moduleNameMapper: {\n    '\\\\.(css|less|scss|sass)$': 'identity-obj-proxy',\n  },\n  collectCoverageFrom: [\n    'src/**/*.{js,jsx,ts,tsx}',\n    '!src/**/*.d.ts',\n    '!src/**/*.stories.{js,jsx,ts,tsx}'\n  ],\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"testdokumentation",children:"Testdokumentation"}),"\n",(0,i.jsx)(n.h3,{id:"testplan",children:"Testplan"}),"\n",(0,i.jsx)(n.p,{children:"F\xfcr jede Komponente wird ein Testplan erstellt:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:"# Testplan f\xfcr Button-Komponente\n\n## Unit-Tests\n- [ ] Rendering mit verschiedenen Varianten (primary, secondary, etc.)\n- [ ] Rendering mit verschiedenen Gr\xf6\xdfen\n- [ ] Klick-Event-Handling\n- [ ] Disabled-Zustand\n\n## Barrierefreiheitstests\n- [ ] ARIA-Attribute\n- [ ] Tastaturnavigation\n- [ ] Farbkontrast\n\n## Visuelle Tests\n- [ ] Alle Varianten und Gr\xf6\xdfen\n- [ ] Hover- und Fokus-Zust\xe4nde\n- [ ] Dark Mode\n\n## E2E-Tests\n- [ ] Klick-Interaktionen\n- [ ] Formular-Submission\n"})}),"\n",(0,i.jsx)(n.h3,{id:"testberichte",children:"Testberichte"}),"\n",(0,i.jsx)(n.p,{children:"Nach jedem Testlauf werden Berichte generiert:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Jest Coverage Report"}),"\n",(0,i.jsx)(n.li,{children:"Axe Accessibility Report"}),"\n",(0,i.jsx)(n.li,{children:"Visual Regression Report"}),"\n",(0,i.jsx)(n.li,{children:"E2E Test Report"}),"\n",(0,i.jsx)(n.li,{children:"Test Coverage Dashboard (docs/wiki/testing/test-coverage-dashboard.md)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Testpyramide"}),": Mehr Unit-Tests als Integrationstests, mehr Integrationstests als E2E-Tests."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Testbare Komponenten"}),": Komponenten so gestalten, dass sie leicht zu testen sind."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deterministische Tests"}),": Tests sollten immer die gleichen Ergebnisse liefern."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Isolierte Tests"}),": Tests sollten unabh\xe4ngig voneinander sein."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Aussagekr\xe4ftige Tests"}),": Tests sollten klar dokumentieren, was getestet wird."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Schnelle Tests"}),": Tests sollten schnell ausgef\xfchrt werden k\xf6nnen."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Wartbare Tests"}),": Tests sollten einfach zu warten sein."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"fehlerbehebung",children:"Fehlerbehebung"}),"\n",(0,i.jsx)(n.h3,{id:"h\xe4ufige-probleme",children:"H\xe4ufige Probleme"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Flaky Tests"}),": Tests, die manchmal fehlschlagen"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L\xf6sung: Deterministische Mocks, stabile Selektoren, Wartezeiten"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Langsame Tests"}),": Tests, die zu lange dauern"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L\xf6sung: Parallelisierung, Mocking, Fokus auf Unit-Tests"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Schwer zu wartende Tests"}),": Tests, die bei kleinen \xc4nderungen brechen"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L\xf6sung: Testen von Verhalten statt Implementierung, stabile Selektoren"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ressourcen",children:"Ressourcen"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://jestjs.io/docs/getting-started",children:"Jest Dokumentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://testing-library.com/docs/react-testing-library/intro/",children:"React Testing Library"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.cypress.io/",children:"Cypress Dokumentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://storybook.js.org/docs/react/writing-tests/introduction",children:"Storybook Testing"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md",children:"Axe-core Regeln"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);