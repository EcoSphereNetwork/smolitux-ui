"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7360],{8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}},9476:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"components/blockchain/WalletConnect","title":"WalletConnect","description":"WalletConnect stellt eine Schnittstelle bereit, um sich mit verschiedenen Krypto-Wallets zu verbinden. Die Komponente bietet Buttons f\xfcr MetaMask und WalletConnect und meldet den Verbindungsstatus an den Aufrufer.","source":"@site/wiki/components/blockchain/WalletConnect.md","sourceDirName":"components/blockchain","slug":"/components/blockchain/WalletConnect","permalink":"/smolitux-ui/en/wiki/components/blockchain/WalletConnect","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/components/blockchain/WalletConnect.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Blockchain Komponenten","permalink":"/smolitux-ui/en/wiki/components/blockchain/"},"next":{"title":"Charts Komponenten","permalink":"/smolitux-ui/en/wiki/components/charts/"}}');var i=t(4848),r=t(8453);const c={},l="WalletConnect",o={},d=[{value:"Props",id:"props",level:2},{value:"Beispiel",id:"beispiel",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"walletconnect",children:"WalletConnect"})}),"\n",(0,i.jsxs)(n.p,{children:["WalletConnect stellt eine Schnittstelle bereit, um sich mit verschiedenen Krypto-Wallets zu verbinden. Die Komponente bietet Buttons f\xfcr MetaMask und WalletConnect und meldet den Verbindungsstatus an den Aufrufer.\nDie Komponente verwendet ",(0,i.jsx)(n.code,{children:"forwardRef"}),", sodass Sie einen Ref auf das Wurzelelement erhalten k\xf6nnen."]}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Typ"}),(0,i.jsx)(n.th,{children:"Beschreibung"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onConnect"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(address: string, provider: EthereumProvider) => void"})}),(0,i.jsx)(n.td,{children:"Wird aufgerufen, sobald die Verbindung erfolgreich hergestellt wurde."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onDisconnect"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"() => void"})}),(0,i.jsx)(n.td,{children:"Wird ausgel\xf6st, wenn die Verbindung getrennt wird."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"supportedWallets"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string[]"})}),(0,i.jsxs)(n.td,{children:["Liste der unterst\xfctzten Wallet-Optionen. Standardm\xe4\xdfig ",(0,i.jsx)(n.code,{children:"['metamask', 'walletconnect']"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"className"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Zus\xe4tzliche CSS-Klassen."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"beispiel",children:"Beispiel"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { WalletConnect } from '@smolitux/blockchain';\n\nexport default function Example() {\n  const handleConnect = (address: string) => {\n    console.log('Verbunden mit', address);\n  };\n\n  return <WalletConnect onConnect={handleConnect} onDisconnect={() => {}} />;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Weitere Informationen finden sich im Paket-README unter ",(0,i.jsx)(n.code,{children:"packages/@smolitux/blockchain/README.md"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);