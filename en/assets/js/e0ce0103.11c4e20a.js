"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8054],{992:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"components/feedback/progress","title":"ProgressBar","description":"Die ProgressBar-Komponente zeigt den Fortschritt eines Vorgangs an und gibt dem Benutzer visuelles Feedback \xfcber den Status.","source":"@site/wiki/components/feedback/progress.md","sourceDirName":"components/feedback","slug":"/components/feedback/progress","permalink":"/smolitux-ui/en/wiki/components/feedback/progress","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/components/feedback/progress.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Alert","permalink":"/smolitux-ui/en/wiki/components/feedback/alert"},"next":{"title":"Spinner","permalink":"/smolitux-ui/en/wiki/components/feedback/spinner"}}');var i=n(4848),t=n(8453);const l={},a="ProgressBar",d={},c=[{value:"Import",id:"import",level:2},{value:"Verwendung",id:"verwendung",level:2},{value:"Einfacher ProgressBar",id:"einfacher-progressbar",level:3},{value:"ProgressBar mit Label",id:"progressbar-mit-label",level:3},{value:"Verschiedene Gr\xf6\xdfen",id:"verschiedene-gr\xf6\xdfen",level:3},{value:"Verschiedene Farben",id:"verschiedene-farben",level:3},{value:"Verschiedene Varianten",id:"verschiedene-varianten",level:3},{value:"Abgerundeter ProgressBar",id:"abgerundeter-progressbar",level:3},{value:"Gradient-Stil",id:"gradient-stil",level:3},{value:"Invertierter ProgressBar",id:"invertierter-progressbar",level:3},{value:"Unbestimmter Fortschritt",id:"unbestimmter-fortschritt",level:3},{value:"Benutzerdefiniertes Label",id:"benutzerdefiniertes-label",level:3},{value:"Verschiedene Label-Formate",id:"verschiedene-label-formate",level:3},{value:"Benutzerdefinierter Min/Max-Bereich",id:"benutzerdefinierter-minmax-bereich",level:3},{value:"Props",id:"props",level:2},{value:"Barrierefreiheit",id:"barrierefreiheit",level:2},{value:"Beispiele",id:"beispiele",level:2},{value:"Fortschrittsanzeige f\xfcr Datei-Upload",id:"fortschrittsanzeige-f\xfcr-datei-upload",level:3},{value:"Mehrstufiger Fortschritt",id:"mehrstufiger-fortschritt",level:3},{value:"Skill-Level-Anzeige",id:"skill-level-anzeige",level:3},{value:"Countdown-Timer mit Fortschrittsanzeige",id:"countdown-timer-mit-fortschrittsanzeige",level:3}];function o(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"progressbar",children:"ProgressBar"})}),"\n",(0,i.jsx)(r.p,{children:"Die ProgressBar-Komponente zeigt den Fortschritt eines Vorgangs an und gibt dem Benutzer visuelles Feedback \xfcber den Status."}),"\n",(0,i.jsx)(r.h2,{id:"import",children:"Import"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"import { ProgressBar } from '@smolitux/core';\n"})}),"\n",(0,i.jsx)(r.h2,{id:"verwendung",children:"Verwendung"}),"\n",(0,i.jsx)(r.h3,{id:"einfacher-progressbar",children:"Einfacher ProgressBar"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"<ProgressBar value={75} />\n"})}),"\n",(0,i.jsx)(r.h3,{id:"progressbar-mit-label",children:"ProgressBar mit Label"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"<ProgressBar value={75} showLabel />\n"})}),"\n",(0,i.jsx)(r.h3,{id:"verschiedene-gr\xf6\xdfen",children:"Verschiedene Gr\xf6\xdfen"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:'<ProgressBar value={75} size="xs" className="mb-2" />\n<ProgressBar value={75} size="sm" className="mb-2" />\n<ProgressBar value={75} size="md" className="mb-2" />\n<ProgressBar value={75} size="lg" />\n'})}),"\n",(0,i.jsx)(r.h3,{id:"verschiedene-farben",children:"Verschiedene Farben"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:'<ProgressBar value={75} color="primary" className="mb-2" />\n<ProgressBar value={75} color="secondary" className="mb-2" />\n<ProgressBar value={75} color="success" className="mb-2" />\n<ProgressBar value={75} color="warning" className="mb-2" />\n<ProgressBar value={75} color="error" className="mb-2" />\n<ProgressBar value={75} color="info" />\n'})}),"\n",(0,i.jsx)(r.h3,{id:"verschiedene-varianten",children:"Verschiedene Varianten"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:'<ProgressBar value={75} variant="default" className="mb-2" />\n<ProgressBar value={75} variant="striped" className="mb-2" />\n<ProgressBar value={75} variant="animated" />\n'})}),"\n",(0,i.jsx)(r.h3,{id:"abgerundeter-progressbar",children:"Abgerundeter ProgressBar"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"<ProgressBar value={75} rounded />\n"})}),"\n",(0,i.jsx)(r.h3,{id:"gradient-stil",children:"Gradient-Stil"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:'<ProgressBar value={75} appearance="gradient" />\n'})}),"\n",(0,i.jsx)(r.h3,{id:"invertierter-progressbar",children:"Invertierter ProgressBar"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"<ProgressBar value={75} inverted />\n"})}),"\n",(0,i.jsx)(r.h3,{id:"unbestimmter-fortschritt",children:"Unbestimmter Fortschritt"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"<ProgressBar indeterminate />\n"})}),"\n",(0,i.jsx)(r.h3,{id:"benutzerdefiniertes-label",children:"Benutzerdefiniertes Label"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:'<ProgressBar \n  value={75} \n  label={<span className="font-bold">75% abgeschlossen</span>} \n/>\n'})}),"\n",(0,i.jsx)(r.h3,{id:"verschiedene-label-formate",children:"Verschiedene Label-Formate"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:'<ProgressBar value={75} showLabel labelFormat="percentage" className="mb-2" />\n<ProgressBar value={75} showLabel labelFormat="value" className="mb-2" />\n<ProgressBar value={75} showLabel labelFormat="valueAndMax" />\n'})}),"\n",(0,i.jsx)(r.h3,{id:"benutzerdefinierter-minmax-bereich",children:"Benutzerdefinierter Min/Max-Bereich"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"<ProgressBar value={7} min={0} max={10} showLabel />\n"})}),"\n",(0,i.jsx)(r.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Prop"}),(0,i.jsx)(r.th,{children:"Typ"}),(0,i.jsx)(r.th,{children:"Standard"}),(0,i.jsx)(r.th,{children:"Beschreibung"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"value"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"number"})}),(0,i.jsx)(r.td,{children:"-"}),(0,i.jsx)(r.td,{children:"Aktueller Wert (0-100)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"max"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"number"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"100"})}),(0,i.jsx)(r.td,{children:"Maximaler Wert"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"min"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"number"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"0"})}),(0,i.jsx)(r.td,{children:"Minimaler Wert"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"showLabel"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"boolean"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"false"})}),(0,i.jsx)(r.td,{children:"Label anzeigen"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"labelFormat"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'percentage' | 'value' | 'valueAndMax'"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'percentage'"})}),(0,i.jsx)(r.td,{children:"Label-Format"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"label"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"ReactNode"})}),(0,i.jsx)(r.td,{children:"-"}),(0,i.jsx)(r.td,{children:"Benutzerdefiniertes Label"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"variant"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'default' | 'striped' | 'animated'"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'default'"})}),(0,i.jsx)(r.td,{children:"Variante des ProgressBars"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"size"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'xs' | 'sm' | 'md' | 'lg'"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'md'"})}),(0,i.jsx)(r.td,{children:"Gr\xf6\xdfe des ProgressBars"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"color"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info'"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'primary'"})}),(0,i.jsx)(r.td,{children:"Farbe des ProgressBars"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"rounded"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"boolean"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"false"})}),(0,i.jsx)(r.td,{children:"Radius des ProgressBars"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"appearance"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'solid' | 'gradient'"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"'solid'"})}),(0,i.jsx)(r.td,{children:"ProgressBar-Stil"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"inverted"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"boolean"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"false"})}),(0,i.jsx)(r.td,{children:"Invertierter Fortschritt (von rechts nach links)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"indeterminate"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"boolean"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"false"})}),(0,i.jsx)(r.td,{children:"Indeterminate-Status (f\xfcr unbekannten Fortschritt)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"className"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"string"})}),(0,i.jsx)(r.td,{children:"-"}),(0,i.jsx)(r.td,{children:"Zus\xe4tzliche CSS-Klassen"})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"barrierefreiheit",children:"Barrierefreiheit"}),"\n",(0,i.jsx)(r.p,{children:"Die ProgressBar-Komponente ist f\xfcr Barrierefreiheit optimiert:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Verwendet die korrekten ARIA-Attribute (",(0,i.jsx)(r.code,{children:'role="progressbar"'}),", ",(0,i.jsx)(r.code,{children:"aria-valuenow"}),", ",(0,i.jsx)(r.code,{children:"aria-valuemin"}),", ",(0,i.jsx)(r.code,{children:"aria-valuemax"}),")"]}),"\n",(0,i.jsx)(r.li,{children:"Bietet visuelles Feedback durch verschiedene Farben und Gr\xf6\xdfen"}),"\n",(0,i.jsx)(r.li,{children:"Unterst\xfctzt Screenreader durch semantische Struktur"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"beispiele",children:"Beispiele"}),"\n",(0,i.jsx)(r.h3,{id:"fortschrittsanzeige-f\xfcr-datei-upload",children:"Fortschrittsanzeige f\xfcr Datei-Upload"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:'function FileUploadProgress() {\n  const [progress, setProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  \n  const startUpload = () => {\n    setIsUploading(true);\n    setProgress(0);\n    \n    // Simuliere einen Upload-Fortschritt\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setIsUploading(false);\n          return 100;\n        }\n        return prev + 5;\n      });\n    }, 300);\n  };\n  \n  return (\n    <div className="max-w-md">\n      <div className="mb-4">\n        <label className="block text-sm font-medium text-gray-700 mb-1">\n          Datei ausw\xe4hlen\n        </label>\n        <input\n          type="file"\n          className="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100"\n        />\n      </div>\n      \n      {isUploading || progress === 100 ? (\n        <div className="mb-4">\n          <ProgressBar \n            value={progress} \n            variant={isUploading ? "animated" : "default"}\n            color={progress === 100 ? "success" : "primary"}\n            showLabel\n          />\n          <p className="text-sm text-gray-500 mt-1">\n            {progress === 100 ? \'Upload abgeschlossen\' : \'Wird hochgeladen...\'}\n          </p>\n        </div>\n      ) : null}\n      \n      <button\n        className="px-4 py-2 bg-primary-500 text-white rounded-md hover:bg-primary-600 disabled:opacity-50"\n        onClick={startUpload}\n        disabled={isUploading}\n      >\n        {isUploading ? \'Wird hochgeladen...\' : \'Upload starten\'}\n      </button>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"mehrstufiger-fortschritt",children:"Mehrstufiger Fortschritt"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"function MultiStepProgress() {\n  const steps = [\n    { id: 1, name: 'Pers\xf6nliche Daten', status: 'complete' },\n    { id: 2, name: 'Adresse', status: 'current' },\n    { id: 3, name: 'Zahlungsmethode', status: 'upcoming' },\n    { id: 4, name: 'Best\xe4tigung', status: 'upcoming' }\n  ];\n  \n  const currentStep = steps.findIndex(step => step.status === 'current') + 1;\n  const progress = (currentStep - 1) / (steps.length - 1) * 100;\n  \n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <ProgressBar \n        value={progress} \n        appearance=\"gradient\" \n        rounded \n        className=\"mb-6\"\n      />\n      \n      <div className=\"flex justify-between\">\n        {steps.map((step) => (\n          <div \n            key={step.id} \n            className={`flex flex-col items-center ${\n              step.status === 'upcoming' ? 'text-gray-400' : \n              step.status === 'current' ? 'text-primary-600 font-medium' : \n              'text-success-600'\n            }`}\n          >\n            <div className={`\n              w-8 h-8 rounded-full flex items-center justify-center mb-2\n              ${step.status === 'upcoming' ? 'border border-gray-300' : \n                step.status === 'current' ? 'bg-primary-100 border-2 border-primary-500' : \n                'bg-success-100 border-2 border-success-500'}\n            `}>\n              {step.status === 'complete' ? (\n                <svg className=\"w-5 h-5 text-success-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              ) : (\n                step.id\n              )}\n            </div>\n            <span className=\"text-sm\">{step.name}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(r.h3,{id:"skill-level-anzeige",children:"Skill-Level-Anzeige"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"function SkillLevelProgress() {\n  const skills = [\n    { name: 'HTML', level: 90 },\n    { name: 'CSS', level: 85 },\n    { name: 'JavaScript', level: 75 },\n    { name: 'React', level: 80 },\n    { name: 'Node.js', level: 65 }\n  ];\n  \n  return (\n    <div className=\"max-w-md\">\n      <h2 className=\"text-xl font-bold mb-4\">F\xe4higkeiten</h2>\n      <div className=\"space-y-4\">\n        {skills.map((skill) => (\n          <div key={skill.name}>\n            <div className=\"flex justify-between mb-1\">\n              <span className=\"text-sm font-medium\">{skill.name}</span>\n              <span className=\"text-sm text-gray-500\">{skill.level}%</span>\n            </div>\n            <ProgressBar \n              value={skill.level} \n              size=\"sm\" \n              color={\n                skill.level >= 80 ? 'success' : \n                skill.level >= 60 ? 'primary' : \n                'warning'\n              }\n              rounded\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(r.h3,{id:"countdown-timer-mit-fortschrittsanzeige",children:"Countdown-Timer mit Fortschrittsanzeige"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:'function CountdownProgress() {\n  const [timeLeft, setTimeLeft] = useState(60); // 60 Sekunden\n  const [isActive, setIsActive] = useState(false);\n  \n  useEffect(() => {\n    let interval = null;\n    \n    if (isActive && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft(timeLeft => timeLeft - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      setIsActive(false);\n    }\n    \n    return () => clearInterval(interval);\n  }, [isActive, timeLeft]);\n  \n  const startTimer = () => {\n    setTimeLeft(60);\n    setIsActive(true);\n  };\n  \n  const resetTimer = () => {\n    setTimeLeft(60);\n    setIsActive(false);\n  };\n  \n  const progress = (timeLeft / 60) * 100;\n  \n  return (\n    <div className="max-w-md">\n      <div className="text-center mb-4">\n        <span className="text-3xl font-bold">{timeLeft}</span>\n        <span className="text-gray-500 ml-1">Sekunden</span>\n      </div>\n      \n      <ProgressBar \n        value={progress} \n        color={\n          progress > 66 ? \'success\' : \n          progress > 33 ? \'warning\' : \n          \'error\'\n        }\n        variant={isActive ? \'animated\' : \'default\'}\n        rounded\n        className="mb-4"\n      />\n      \n      <div className="flex space-x-2">\n        {!isActive ? (\n          <button\n            className="px-4 py-2 bg-primary-500 text-white rounded-md hover:bg-primary-600 flex-1"\n            onClick={startTimer}\n          >\n            Start\n          </button>\n        ) : (\n          <button\n            className="px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 flex-1"\n            onClick={resetTimer}\n          >\n            Zur\xfccksetzen\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>a});var s=n(6540);const i={},t=s.createContext(i);function l(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);