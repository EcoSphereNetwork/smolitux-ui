"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1986],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const d={},s=t.createContext(d);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},9976:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"components/navigation/tabview","title":"TabView","description":"Die TabView-Komponente erm\xf6glicht die Organisation von Inhalten in Registerkarten, zwischen denen Benutzer wechseln k\xf6nnen. Sie ist ideal f\xfcr die Darstellung von verwandten Inhalten in einem begrenzten Raum.","source":"@site/wiki/components/navigation/tabview.md","sourceDirName":"components/navigation","slug":"/components/navigation/tabview","permalink":"/smolitux-ui/en/wiki/components/navigation/tabview","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/components/navigation/tabview.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Tabs","permalink":"/smolitux-ui/en/wiki/components/navigation/tabs"},"next":{"title":"Dialog-Komponente: Barrierefreiheit","permalink":"/smolitux-ui/en/wiki/components/overlay/dialog/accessibility"}}');var d=i(4848),s=i(8453);const a={},r="TabView",l={},c=[{value:"Import",id:"import",level:2},{value:"Verwendung",id:"verwendung",level:2},{value:"Einfache Tabs",id:"einfache-tabs",level:3},{value:"Tabs mit Icons",id:"tabs-mit-icons",level:3},{value:"Tabs mit Badges",id:"tabs-mit-badges",level:3},{value:"Verschiedene Tab-Varianten",id:"verschiedene-tab-varianten",level:3},{value:"Tab-Positionen",id:"tab-positionen",level:3},{value:"Kontrollierte Tabs",id:"kontrollierte-tabs",level:3},{value:"Props",id:"props",level:2},{value:"TabItem Interface",id:"tabitem-interface",level:3},{value:"Barrierefreiheit",id:"barrierefreiheit",level:2},{value:"Beispiele",id:"beispiele",level:2},{value:"Dynamische Tabs",id:"dynamische-tabs",level:3},{value:"Tabs mit benutzerdefinierten Inhalten",id:"tabs-mit-benutzerdefinierten-inhalten",level:3},{value:"Tabs mit Formularen",id:"tabs-mit-formularen",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"tabview",children:"TabView"})}),"\n",(0,d.jsx)(n.p,{children:"Die TabView-Komponente erm\xf6glicht die Organisation von Inhalten in Registerkarten, zwischen denen Benutzer wechseln k\xf6nnen. Sie ist ideal f\xfcr die Darstellung von verwandten Inhalten in einem begrenzten Raum."}),"\n",(0,d.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:"import { TabView } from '@smolitux/core';\n"})}),"\n",(0,d.jsx)(n.h2,{id:"verwendung",children:"Verwendung"}),"\n",(0,d.jsx)(n.h3,{id:"einfache-tabs",children:"Einfache Tabs"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:"const tabs = [\n  {\n    id: 'tab1',\n    label: 'Profil',\n    content: <div>Profilinformationen hier...</div>\n  },\n  {\n    id: 'tab2',\n    label: 'Einstellungen',\n    content: <div>Einstellungen hier...</div>\n  },\n  {\n    id: 'tab3',\n    label: 'Benachrichtigungen',\n    content: <div>Benachrichtigungen hier...</div>\n  }\n];\n\n<TabView tabs={tabs} defaultTabId=\"tab1\" />\n"})}),"\n",(0,d.jsx)(n.h3,{id:"tabs-mit-icons",children:"Tabs mit Icons"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:"import { UserIcon, CogIcon, BellIcon } from '@heroicons/react/outline';\n\nconst tabs = [\n  {\n    id: 'tab1',\n    label: 'Profil',\n    icon: <UserIcon className=\"w-5 h-5\" />,\n    content: <div>Profilinformationen hier...</div>\n  },\n  {\n    id: 'tab2',\n    label: 'Einstellungen',\n    icon: <CogIcon className=\"w-5 h-5\" />,\n    content: <div>Einstellungen hier...</div>\n  },\n  {\n    id: 'tab3',\n    label: 'Benachrichtigungen',\n    icon: <BellIcon className=\"w-5 h-5\" />,\n    content: <div>Benachrichtigungen hier...</div>\n  }\n];\n\n<TabView tabs={tabs} defaultTabId=\"tab1\" />\n"})}),"\n",(0,d.jsx)(n.h3,{id:"tabs-mit-badges",children:"Tabs mit Badges"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:"const tabs = [\n  {\n    id: 'tab1',\n    label: 'Inbox',\n    content: <div>Nachrichten hier...</div>,\n    badge: '5',\n    badgeColor: 'primary'\n  },\n  {\n    id: 'tab2',\n    label: 'Gesendet',\n    content: <div>Gesendete Nachrichten hier...</div>\n  },\n  {\n    id: 'tab3',\n    label: 'Spam',\n    content: <div>Spam-Nachrichten hier...</div>,\n    badge: '12',\n    badgeColor: 'danger'\n  }\n];\n\n<TabView tabs={tabs} defaultTabId=\"tab1\" />\n"})}),"\n",(0,d.jsx)(n.h3,{id:"verschiedene-tab-varianten",children:"Verschiedene Tab-Varianten"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:'// Standard-Tabs\n<TabView tabs={tabs} variant="default" />\n\n// Pill-Tabs\n<TabView tabs={tabs} variant="pills" />\n\n// Button-Tabs\n<TabView tabs={tabs} variant="buttons" />\n\n// Unterstrichene Tabs\n<TabView tabs={tabs} variant="underline" />\n\n// Minimale Tabs\n<TabView tabs={tabs} variant="minimal" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"tab-positionen",children:"Tab-Positionen"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:'// Tabs oben (Standard)\n<TabView tabs={tabs} position="top" />\n\n// Tabs unten\n<TabView tabs={tabs} position="bottom" />\n\n// Tabs links\n<TabView tabs={tabs} position="left" />\n\n// Tabs rechts\n<TabView tabs={tabs} position="right" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"kontrollierte-tabs",children:"Kontrollierte Tabs"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\n\nfunction ControlledTabs() {\n  const [activeTab, setActiveTab] = useState('tab1');\n  \n  return (\n    <TabView \n      tabs={tabs} \n      activeTabId={activeTab} \n      onTabChange={(tabId) => setActiveTab(tabId)} \n    />\n  );\n}\n"})}),"\n",(0,d.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Prop"}),(0,d.jsx)(n.th,{children:"Typ"}),(0,d.jsx)(n.th,{children:"Standard"}),(0,d.jsx)(n.th,{children:"Beschreibung"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"tabs"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"TabItem[]"})}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Array von Tab-Objekten"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"defaultTabId"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"ID des standardm\xe4\xdfig aktiven Tabs (unkontrollierter Modus)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeTabId"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"ID des aktiven Tabs (kontrollierter Modus)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onTabChange"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(tabId: string) => void"})}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Callback-Funktion, die aufgerufen wird, wenn ein Tab gewechselt wird"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"variant"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'default' | 'pills' | 'buttons' | 'underline' | 'minimal'"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'default'"})}),(0,d.jsx)(n.td,{children:"Visueller Stil der Tabs"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"fullWidth"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"Ob die Tabs die volle Breite einnehmen sollen"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"className"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"''"})}),(0,d.jsx)(n.td,{children:"Zus\xe4tzliche CSS-Klassen f\xfcr den Container"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"tabsClassName"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"''"})}),(0,d.jsx)(n.td,{children:"Zus\xe4tzliche CSS-Klassen f\xfcr die Tab-Leiste"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"contentClassName"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"''"})}),(0,d.jsx)(n.td,{children:"Zus\xe4tzliche CSS-Klassen f\xfcr den Inhaltsbereich"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"position"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'top' | 'bottom' | 'left' | 'right'"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'top'"})}),(0,d.jsx)(n.td,{children:"Position der Tab-Leiste relativ zum Inhalt"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"showContent"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{children:"Ob der Inhalt angezeigt werden soll"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lazy"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{children:"Ob Inhalte nur bei Bedarf gerendert werden sollen"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"tabSize"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'sm' | 'md' | 'lg'"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'md'"})}),(0,d.jsx)(n.td,{children:"Gr\xf6\xdfe der Tabs"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"centered"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"Ob die Tabs zentriert werden sollen"})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"tabitem-interface",children:"TabItem Interface"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Eigenschaft"}),(0,d.jsx)(n.th,{children:"Typ"}),(0,d.jsx)(n.th,{children:"Beschreibung"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"id"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Eindeutige ID des Tabs"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"label"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ReactNode"})}),(0,d.jsx)(n.td,{children:"Label des Tabs"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"content"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ReactNode"})}),(0,d.jsx)(n.td,{children:"Inhalt des Tabs"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"icon"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ReactNode"})}),(0,d.jsx)(n.td,{children:"Icon des Tabs (optional)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"disabled"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"Ob der Tab deaktiviert ist (optional)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"badge"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string | number"})}),(0,d.jsx)(n.td,{children:"Badge-Text oder -Zahl (optional)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"badgeColor"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'primary' | 'success' | 'warning' | 'danger' | 'info' | 'default'"})}),(0,d.jsx)(n.td,{children:"Farbe des Badges (optional)"})]})]})]}),"\n",(0,d.jsx)(n.h2,{id:"barrierefreiheit",children:"Barrierefreiheit"}),"\n",(0,d.jsx)(n.p,{children:"Die TabView-Komponente ist f\xfcr Barrierefreiheit optimiert:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Verwendet die richtigen ARIA-Rollen (",(0,d.jsx)(n.code,{children:'role="tablist"'}),", ",(0,d.jsx)(n.code,{children:'role="tab"'}),", ",(0,d.jsx)(n.code,{children:'role="tabpanel"'}),")"]}),"\n",(0,d.jsx)(n.li,{children:"Tastaturnavigation: Tabs k\xf6nnen mit den Pfeiltasten durchlaufen werden"}),"\n",(0,d.jsx)(n.li,{children:"Fokus-Management: Fokus wird korrekt zwischen Tabs bewegt"}),"\n",(0,d.jsx)(n.li,{children:"Screenreader-Unterst\xfctzung: Korrekte ARIA-Attribute f\xfcr Beziehungen zwischen Tabs und Panels"}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"beispiele",children:"Beispiele"}),"\n",(0,d.jsx)(n.h3,{id:"dynamische-tabs",children:"Dynamische Tabs"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\nimport { TabView, Button } from '@smolitux/core';\n\nfunction DynamicTabs() {\n  const [tabs, setTabs] = useState([\n    { id: 'tab1', label: 'Tab 1', content: <div>Inhalt von Tab 1</div> },\n    { id: 'tab2', label: 'Tab 2', content: <div>Inhalt von Tab 2</div> }\n  ]);\n  \n  const [activeTab, setActiveTab] = useState('tab1');\n  \n  const addTab = () => {\n    const newTabId = `tab${tabs.length + 1}`;\n    setTabs([\n      ...tabs,\n      {\n        id: newTabId,\n        label: `Tab ${tabs.length + 1}`,\n        content: <div>Inhalt von Tab {tabs.length + 1}</div>\n      }\n    ]);\n    setActiveTab(newTabId);\n  };\n  \n  return (\n    <div>\n      <Button onClick={addTab} className=\"mb-4\">Neuen Tab hinzuf\xfcgen</Button>\n      <TabView \n        tabs={tabs} \n        activeTabId={activeTab} \n        onTabChange={setActiveTab} \n      />\n    </div>\n  );\n}\n"})}),"\n",(0,d.jsx)(n.h3,{id:"tabs-mit-benutzerdefinierten-inhalten",children:"Tabs mit benutzerdefinierten Inhalten"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:'const tabs = [\n  {\n    id: \'tab1\',\n    label: (\n      <div className="flex items-center">\n        <span className="h-3 w-3 rounded-full bg-green-500 mr-2"></span>\n        Online\n      </div>\n    ),\n    content: <div>Online-Status-Informationen</div>\n  },\n  {\n    id: \'tab2\',\n    label: (\n      <div className="flex items-center">\n        <span className="h-3 w-3 rounded-full bg-red-500 mr-2"></span>\n        Offline\n      </div>\n    ),\n    content: <div>Offline-Status-Informationen</div>\n  }\n];\n\n<TabView tabs={tabs} defaultTabId="tab1" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"tabs-mit-formularen",children:"Tabs mit Formularen"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jsx",children:'const tabs = [\n  {\n    id: \'personal\',\n    label: \'Pers\xf6nliche Daten\',\n    content: (\n      <form>\n        <div className="space-y-4">\n          <Input label="Name" name="name" />\n          <Input label="E-Mail" name="email" type="email" />\n          <Input label="Telefon" name="phone" type="tel" />\n        </div>\n      </form>\n    )\n  },\n  {\n    id: \'address\',\n    label: \'Adresse\',\n    content: (\n      <form>\n        <div className="space-y-4">\n          <Input label="Stra\xdfe" name="street" />\n          <Input label="PLZ" name="zip" />\n          <Input label="Stadt" name="city" />\n        </div>\n      </form>\n    )\n  },\n  {\n    id: \'payment\',\n    label: \'Zahlungsinformationen\',\n    content: (\n      <form>\n        <div className="space-y-4">\n          <Input label="Karteninhaber" name="cardHolder" />\n          <Input label="Kartennummer" name="cardNumber" />\n          <div className="flex space-x-4">\n            <Input label="Ablaufdatum" name="expiry" />\n            <Input label="CVC" name="cvc" />\n          </div>\n        </div>\n      </form>\n    )\n  }\n];\n\n<TabView tabs={tabs} defaultTabId="personal" />\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}}}]);