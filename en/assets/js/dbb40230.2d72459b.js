"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3692],{5036:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"accessibility/components/drawer","title":"Drawer Barrierefreiheit","description":"Implementierte Verbesserungen","source":"@site/docs/accessibility/components/drawer.md","sourceDirName":"accessibility/components","slug":"/accessibility/components/drawer","permalink":"/smolitux-ui/en/docs/accessibility/components/drawer","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/docs/accessibility/components/drawer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"wikiSidebar","previous":{"title":"ColorPicker Barrierefreiheit","permalink":"/smolitux-ui/en/docs/accessibility/components/colorpicker"},"next":{"title":"Dropdown Barrierefreiheit","permalink":"/smolitux-ui/en/docs/accessibility/components/dropdown"}}');var t=r(4848),s=r(8453);const l={},a="Drawer Barrierefreiheit",d={},c=[{value:"Implementierte Verbesserungen",id:"implementierte-verbesserungen",level:2},{value:"ARIA-Attribute",id:"aria-attribute",level:3},{value:"Fokus-Management",id:"fokus-management",level:3},{value:"Tastaturnavigation",id:"tastaturnavigation",level:3},{value:"Screenreader-Unterst\xfctzung",id:"screenreader-unterst\xfctzung",level:3},{value:"Beispiel-Implementierung",id:"beispiel-implementierung",level:2},{value:"Focus-Trap Implementierung",id:"focus-trap-implementierung",level:3},{value:"Fokus-R\xfcckgabe",id:"fokus-r\xfcckgabe",level:3},{value:"Barrierefreiheitstests",id:"barrierefreiheitstests",level:2},{value:"Bekannte Einschr\xe4nkungen",id:"bekannte-einschr\xe4nkungen",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"drawer-barrierefreiheit",children:"Drawer Barrierefreiheit"})}),"\n",(0,t.jsx)(n.h2,{id:"implementierte-verbesserungen",children:"Implementierte Verbesserungen"}),"\n",(0,t.jsx)(n.p,{children:"Die Drawer-Komponente wurde mit folgenden Barrierefreiheitsverbesserungen aktualisiert:"}),"\n",(0,t.jsx)(n.h3,{id:"aria-attribute",children:"ARIA-Attribute"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'role="dialog"'})," - Definiert den Drawer als Dialog"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'aria-modal="true"'})," - Zeigt an, dass der Dialog modal ist"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"aria-labelledby"})," - Verkn\xfcpft den Titel mit dem Drawer"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"aria-label"})," - Alternative Bezeichnung, wenn kein Titel vorhanden ist"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"aria-describedby"})," - Verkn\xfcpft eine detaillierte Beschreibung mit dem Drawer"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"F\xfcr den Schlie\xdfen-Button:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'aria-label="Schlie\xdfen"'})," - Beschreibt die Funktion des Buttons"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'aria-hidden="true"'})," f\xfcr dekorative Icons"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"fokus-management",children:"Fokus-Management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Focus-Trap zur Begrenzung des Fokus innerhalb des Drawers"}),"\n",(0,t.jsx)(n.li,{children:"Automatischer Fokus auf den Schlie\xdfen-Button beim \xd6ffnen"}),"\n",(0,t.jsx)(n.li,{children:"R\xfcckgabe des Fokus zum ausl\xf6senden Element beim Schlie\xdfen"}),"\n",(0,t.jsx)(n.li,{children:"Speicherung des Elements, das vor dem \xd6ffnen den Fokus hatte"}),"\n",(0,t.jsx)(n.li,{children:"Sichtbare Fokus-Indikatoren f\xfcr alle interaktiven Elemente"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"tastaturnavigation",children:"Tastaturnavigation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Escape-Taste zum Schlie\xdfen des Drawers"}),"\n",(0,t.jsx)(n.li,{children:"Tab-Navigation durch alle interaktiven Elemente"}),"\n",(0,t.jsx)(n.li,{children:"Zyklische Tab-Navigation innerhalb des Drawers (Focus-Trap)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"screenreader-unterst\xfctzung",children:"Screenreader-Unterst\xfctzung"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Beschreibende Texte f\xfcr den Drawer und seine Funktionen"}),"\n",(0,t.jsxs)(n.li,{children:["Versteckte Hilfstexte mit ",(0,t.jsx)(n.code,{children:"sr-only"}),"-Klassen"]}),"\n",(0,t.jsx)(n.li,{children:"Korrekte Hierarchie von \xdcberschriften"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"beispiel-implementierung",children:"Beispiel-Implementierung"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'<div\n  ref={drawerRef}\n  id={uniqueId}\n  role="dialog"\n  aria-modal="true"\n  aria-labelledby={title ? titleId : undefined}\n  aria-label={!title ? ariaLabel || \'Drawer\' : undefined}\n  aria-describedby={ariaDescription ? descriptionId : undefined}\n  tabIndex={-1}\n>\n  {ariaDescription && (\n    <div id={descriptionId} className="sr-only">\n      {ariaDescription}\n    </div>\n  )}\n  \n  {showHeader && (\n    <div className="header">\n      <h2 id={titleId}>\n        {title}\n      </h2>\n      <button\n        ref={closeButtonRef}\n        type="button"\n        onClick={onClose}\n        aria-label="Schlie\xdfen"\n      >\n        <svg aria-hidden="true">\n          {/* Icon */}\n        </svg>\n      </button>\n    </div>\n  )}\n  \n  <div className="content">\n    {children}\n  </div>\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"focus-trap-implementierung",children:"Focus-Trap Implementierung"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// ESC-Taste zum Schlie\xdfen und Focus-Trap\nuseEffect(() => {\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (!isOpen) return;\n    \n    // ESC-Taste zum Schlie\xdfen\n    if (e.key === 'Escape') {\n      e.preventDefault();\n      onClose();\n      return;\n    }\n    \n    // Tab-Taste f\xfcr Focus-Trap\n    if (e.key === 'Tab') {\n      if (!firstFocusableRef.current || !lastFocusableRef.current) return;\n      \n      // Shift+Tab: Wenn der Fokus auf dem ersten Element ist, gehe zum letzten Element\n      if (e.shiftKey && document.activeElement === firstFocusableRef.current) {\n        e.preventDefault();\n        lastFocusableRef.current.focus();\n      }\n      // Tab: Wenn der Fokus auf dem letzten Element ist, gehe zum ersten Element\n      else if (!e.shiftKey && document.activeElement === lastFocusableRef.current) {\n        e.preventDefault();\n        firstFocusableRef.current.focus();\n      }\n    }\n  };\n  \n  document.addEventListener('keydown', handleKeyDown);\n  return () => document.removeEventListener('keydown', handleKeyDown);\n}, [isOpen, onClose]);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"fokus-r\xfcckgabe",children:"Fokus-R\xfcckgabe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Setze den Fokus zur\xfcck, wenn der Drawer geschlossen wird\nuseEffect(() => {\n  if (!isOpen && previouslyFocusedElement) {\n    // Wenn eine ID oder ein Element zum Zur\xfccksetzen des Fokus angegeben wurde, verwende dieses\n    if (returnFocusToId) {\n      const element = document.getElementById(returnFocusToId);\n      if (element) {\n        element.focus();\n        return;\n      }\n    }\n    \n    if (returnFocusToElement) {\n      returnFocusToElement.focus();\n      return;\n    }\n    \n    // Sonst setze den Fokus auf das Element, das vorher den Fokus hatte\n    previouslyFocusedElement.focus();\n  }\n}, [isOpen, previouslyFocusedElement, returnFocusToId, returnFocusToElement]);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"barrierefreiheitstests",children:"Barrierefreiheitstests"}),"\n",(0,t.jsx)(n.p,{children:"Die Drawer-Komponente wurde mit folgenden Tests auf Barrierefreiheit gepr\xfcft:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automatisierte Tests"})," mit jest-axe zur \xdcberpr\xfcfung der ARIA-Attribute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tastaturnavigation"})," zur Sicherstellung der vollst\xe4ndigen Bedienbarkeit ohne Maus"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Screenreader-Tests"})," zur \xdcberpr\xfcfung der korrekten Ank\xfcndigungen"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fokus-Management-Tests"})," zur Sicherstellung der korrekten Fokusreihenfolge"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"bekannte-einschr\xe4nkungen",children:"Bekannte Einschr\xe4nkungen"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Bei sehr komplexen Inhalten im Drawer kann die Tastaturnavigation umst\xe4ndlich sein"}),"\n",(0,t.jsx)(n.li,{children:"Bei mehreren verschachtelten Drawern kann das Fokus-Management komplex werden"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var i=r(6540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);