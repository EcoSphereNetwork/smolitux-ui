"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6446],{3958:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"components/overlay/drawer","title":"Drawer","description":"Die Drawer-Komponente zeigt Inhalte in einem Panel an, das von einer Seite des Bildschirms eingeblendet wird. Sie eignet sich f\xfcr Seitenmen\xfcs, Filter und zus\xe4tzliche Informationen.","source":"@site/wiki/components/overlay/drawer.md","sourceDirName":"components/overlay","slug":"/components/overlay/drawer","permalink":"/smolitux-ui/en/wiki/components/overlay/drawer","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/components/overlay/drawer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Dialog","permalink":"/smolitux-ui/en/wiki/components/overlay/dialog"},"next":{"title":"Modal-Komponente: Barrierefreiheit","permalink":"/smolitux-ui/en/wiki/components/overlay/modal/accessibility"}}');var i=t(4848),s=t(8453);const a={},l="Drawer",d={},o=[{value:"Import",id:"import",level:2},{value:"Verwendung",id:"verwendung",level:2},{value:"Einfacher Drawer",id:"einfacher-drawer",level:3},{value:"Verschiedene Positionen",id:"verschiedene-positionen",level:3},{value:"Benutzerdefinierte Gr\xf6\xdfe",id:"benutzerdefinierte-gr\xf6\xdfe",level:3},{value:"Drawer mit Footer",id:"drawer-mit-footer",level:3},{value:"Drawer ohne Header",id:"drawer-ohne-header",level:3},{value:"Props",id:"props",level:2},{value:"Barrierefreiheit",id:"barrierefreiheit",level:2},{value:"Beispiele",id:"beispiele",level:2},{value:"Navigations-Drawer",id:"navigations-drawer",level:3},{value:"Filter-Drawer",id:"filter-drawer",level:3},{value:"Warenkorb-Drawer",id:"warenkorb-drawer",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"drawer",children:"Drawer"})}),"\n",(0,i.jsx)(n.p,{children:"Die Drawer-Komponente zeigt Inhalte in einem Panel an, das von einer Seite des Bildschirms eingeblendet wird. Sie eignet sich f\xfcr Seitenmen\xfcs, Filter und zus\xe4tzliche Informationen."}),"\n",(0,i.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Drawer } from '@smolitux/core';\n"})}),"\n",(0,i.jsx)(n.h2,{id:"verwendung",children:"Verwendung"}),"\n",(0,i.jsx)(n.h3,{id:"einfacher-drawer",children:"Einfacher Drawer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function SimpleDrawerExample() {\n  const [isOpen, setIsOpen] = useState(false);\n  \n  return (\n    <>\n      <Button onClick={() => setIsOpen(true)}>Drawer \xf6ffnen</Button>\n      \n      <Drawer\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        title="Beispiel-Drawer"\n      >\n        <p>Dies ist ein einfacher Drawer mit Standardeinstellungen.</p>\n      </Drawer>\n    </>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"verschiedene-positionen",children:"Verschiedene Positionen"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function PlacementDrawerExample() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [placement, setPlacement] = useState<'left' | 'right' | 'top' | 'bottom'>('right');\n  \n  const openDrawer = (position) => {\n    setPlacement(position);\n    setIsOpen(true);\n  };\n  \n  return (\n    <>\n      <div className=\"flex space-x-2\">\n        <Button onClick={() => openDrawer('left')}>Links</Button>\n        <Button onClick={() => openDrawer('right')}>Rechts</Button>\n        <Button onClick={() => openDrawer('top')}>Oben</Button>\n        <Button onClick={() => openDrawer('bottom')}>Unten</Button>\n      </div>\n      \n      <Drawer\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        title={`Drawer (${placement})`}\n        placement={placement}\n      >\n        <p>Dies ist ein Drawer, der von {placement} eingeblendet wird.</p>\n      </Drawer>\n    </>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"benutzerdefinierte-gr\xf6\xdfe",children:"Benutzerdefinierte Gr\xf6\xdfe"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Drawer\n  isOpen={isOpen}\n  onClose={() => setIsOpen(false)}\n  title="Breiter Drawer"\n  width="500px" // F\xfcr left/right\n>\n  <p>Dies ist ein Drawer mit benutzerdefinierter Breite.</p>\n</Drawer>\n\n<Drawer\n  isOpen={isOpen}\n  onClose={() => setIsOpen(false)}\n  title="Hoher Drawer"\n  placement="top"\n  height="300px" // F\xfcr top/bottom\n>\n  <p>Dies ist ein Drawer mit benutzerdefinierter H\xf6he.</p>\n</Drawer>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"drawer-mit-footer",children:"Drawer mit Footer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Drawer\n  isOpen={isOpen}\n  onClose={() => setIsOpen(false)}\n  title="Drawer mit Footer"\n  footer={\n    <div className="flex justify-end">\n      <Button onClick={() => setIsOpen(false)}>Schlie\xdfen</Button>\n    </div>\n  }\n>\n  <p>Dies ist ein Drawer mit einem benutzerdefinierten Footer.</p>\n</Drawer>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"drawer-ohne-header",children:"Drawer ohne Header"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Drawer\n  isOpen={isOpen}\n  onClose={() => setIsOpen(false)}\n  showHeader={false}\n>\n  <div className="p-4">\n    <h2 className="text-lg font-bold mb-4">Benutzerdefinierter Header</h2>\n    <p>Dies ist ein Drawer ohne den Standard-Header.</p>\n    <button \n      className="absolute top-2 right-2 p-2 rounded-full hover:bg-gray-100"\n      onClick={() => setIsOpen(false)}\n    >\n      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />\n      </svg>\n    </button>\n  </div>\n</Drawer>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Typ"}),(0,i.jsx)(n.th,{children:"Standard"}),(0,i.jsx)(n.th,{children:"Beschreibung"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isOpen"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Ist der Drawer sichtbar?"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onClose"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"() => void"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Callback zum Schlie\xdfen des Drawers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"placement"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'left' | 'right' | 'top' | 'bottom'"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'right'"})}),(0,i.jsx)(n.td,{children:"Position des Drawers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"width"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string | number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'320px'"})}),(0,i.jsx)(n.td,{children:"Breite des Drawers (f\xfcr left/right)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"height"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string | number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'320px'"})}),(0,i.jsx)(n.td,{children:"H\xf6he des Drawers (f\xfcr top/bottom)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"title"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ReactNode"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Titel des Drawers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"footer"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ReactNode"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Footer-Inhalt"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"children"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ReactNode"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Inhalt des Drawers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"closeOnOverlayClick"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Beim Klick auf Overlay schlie\xdfen"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showHeader"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Header-Anzeige"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"className"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Zus\xe4tzliche CSS-Klassen"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"zIndex"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"1000"})}),(0,i.jsx)(n.td,{children:"Z-Index-Wert"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"barrierefreiheit",children:"Barrierefreiheit"}),"\n",(0,i.jsx)(n.p,{children:"Die Drawer-Komponente ist f\xfcr Barrierefreiheit optimiert:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Verwendet die korrekten ARIA-Attribute (",(0,i.jsx)(n.code,{children:'role="dialog"'}),", ",(0,i.jsx)(n.code,{children:'aria-modal="true"'}),", ",(0,i.jsx)(n.code,{children:"aria-labelledby"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Fokus-Management: Fokus wird beim \xd6ffnen auf den Drawer gesetzt und beim Schlie\xdfen zur\xfcckgegeben"}),"\n",(0,i.jsx)(n.li,{children:"Tastaturnavigation: Schlie\xdfen mit ESC, Fokus-Trap innerhalb des Drawers"}),"\n",(0,i.jsx)(n.li,{children:"Screenreader-Unterst\xfctzung durch semantische Struktur"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"beispiele",children:"Beispiele"}),"\n",(0,i.jsx)(n.h3,{id:"navigations-drawer",children:"Navigations-Drawer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function NavigationDrawer() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activePage, setActivePage] = useState(\'home\');\n  \n  const navigation = [\n    { id: \'home\', label: \'Home\', icon: \'\ud83c\udfe0\' },\n    { id: \'products\', label: \'Produkte\', icon: \'\ud83d\uded2\' },\n    { id: \'about\', label: \'\xdcber uns\', icon: \'\ud83d\udcc4\' },\n    { id: \'contact\', label: \'Kontakt\', icon: \'\u2709\ufe0f\' },\n    { id: \'settings\', label: \'Einstellungen\', icon: \'\u2699\ufe0f\' },\n  ];\n  \n  const handleNavigation = (pageId) => {\n    setActivePage(pageId);\n    setIsOpen(false);\n    console.log(`Navigiere zu: ${pageId}`);\n  };\n  \n  return (\n    <>\n      <div className="bg-white border-b p-4 flex items-center">\n        <button \n          className="p-2 rounded-md hover:bg-gray-100"\n          onClick={() => setIsOpen(true)}\n        >\n          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />\n          </svg>\n        </button>\n        <h1 className="ml-4 text-lg font-bold">Meine App</h1>\n      </div>\n      \n      <Drawer\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        title="Navigation"\n        placement="left"\n      >\n        <nav className="py-2">\n          {navigation.map((item) => (\n            <button\n              key={item.id}\n              className={`w-full flex items-center px-4 py-3 text-left ${\n                activePage === item.id \n                  ? \'bg-primary-50 text-primary-700 font-medium\' \n                  : \'hover:bg-gray-50\'\n              }`}\n              onClick={() => handleNavigation(item.id)}\n            >\n              <span className="mr-3">{item.icon}</span>\n              {item.label}\n            </button>\n          ))}\n        </nav>\n        \n        <div className="mt-auto border-t pt-4 px-4">\n          <div className="flex items-center">\n            <div className="w-10 h-10 rounded-full bg-gray-300 flex items-center justify-center">\n              <span className="text-lg">\ud83d\udc64</span>\n            </div>\n            <div className="ml-3">\n              <p className="font-medium">Max Mustermann</p>\n              <p className="text-sm text-gray-500">max@example.com</p>\n            </div>\n          </div>\n          <button \n            className="mt-4 w-full py-2 border border-gray-300 rounded-md hover:bg-gray-50"\n            onClick={() => console.log(\'Abmelden\')}\n          >\n            Abmelden\n          </button>\n        </div>\n      </Drawer>\n      \n      <div className="p-4">\n        <h2 className="text-xl font-bold mb-4">\n          {navigation.find(item => item.id === activePage)?.label || \'Home\'}\n        </h2>\n        <p>Hauptinhalt der Seite</p>\n      </div>\n    </>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"filter-drawer",children:"Filter-Drawer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function FilterDrawer() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filters, setFilters] = useState({\n    category: \'\',\n    price: [0, 1000],\n    inStock: false\n  });\n  \n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  \n  const applyFilters = () => {\n    console.log(\'Angewendete Filter:\', filters);\n    setIsOpen(false);\n  };\n  \n  const resetFilters = () => {\n    setFilters({\n      category: \'\',\n      price: [0, 1000],\n      inStock: false\n    });\n  };\n  \n  return (\n    <>\n      <div className="flex justify-between items-center mb-4">\n        <h2 className="text-xl font-bold">Produkte</h2>\n        <Button onClick={() => setIsOpen(true)}>\n          Filter\n        </Button>\n      </div>\n      \n      <Drawer\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        title="Filter"\n        placement="right"\n        footer={\n          <div className="flex justify-between w-full">\n            <Button variant="outline" onClick={resetFilters}>\n              Zur\xfccksetzen\n            </Button>\n            <Button onClick={applyFilters}>\n              Filter anwenden\n            </Button>\n          </div>\n        }\n      >\n        <div className="space-y-6">\n          <div>\n            <label className="block text-sm font-medium text-gray-700 mb-1">\n              Kategorie\n            </label>\n            <select\n              className="w-full border-gray-300 rounded-md shadow-sm"\n              value={filters.category}\n              onChange={(e) => handleFilterChange(\'category\', e.target.value)}\n            >\n              <option value="">Alle Kategorien</option>\n              <option value="electronics">Elektronik</option>\n              <option value="clothing">Kleidung</option>\n              <option value="books">B\xfccher</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className="block text-sm font-medium text-gray-700 mb-1">\n              Preis\n            </label>\n            <div className="flex items-center space-x-2">\n              <input\n                type="number"\n                className="w-full border-gray-300 rounded-md shadow-sm"\n                value={filters.price[0]}\n                onChange={(e) => handleFilterChange(\'price\', [parseInt(e.target.value), filters.price[1]])}\n                min="0"\n              />\n              <span>bis</span>\n              <input\n                type="number"\n                className="w-full border-gray-300 rounded-md shadow-sm"\n                value={filters.price[1]}\n                onChange={(e) => handleFilterChange(\'price\', [filters.price[0], parseInt(e.target.value)])}\n                min={filters.price[0]}\n              />\n            </div>\n          </div>\n          \n          <div className="flex items-center">\n            <input\n              type="checkbox"\n              id="inStock"\n              checked={filters.inStock}\n              onChange={(e) => handleFilterChange(\'inStock\', e.target.checked)}\n              className="h-4 w-4 text-primary-600 border-gray-300 rounded"\n            />\n            <label htmlFor="inStock" className="ml-2 block text-sm text-gray-700">\n              Nur verf\xfcgbare Artikel\n            </label>\n          </div>\n        </div>\n      </Drawer>\n      \n      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">\n        {/* Produktliste hier */}\n        <div className="border p-4 rounded-md">Produkt 1</div>\n        <div className="border p-4 rounded-md">Produkt 2</div>\n        <div className="border p-4 rounded-md">Produkt 3</div>\n      </div>\n    </>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"warenkorb-drawer",children:"Warenkorb-Drawer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function CartDrawer() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([\n    { id: 1, name: \'Produkt 1\', price: 29.99, quantity: 1 },\n    { id: 2, name: \'Produkt 2\', price: 49.99, quantity: 2 }\n  ]);\n  \n  const updateQuantity = (id, newQuantity) => {\n    if (newQuantity < 1) return;\n    \n    setCartItems(prev => \n      prev.map(item => \n        item.id === id ? { ...item, quantity: newQuantity } : item\n      )\n    );\n  };\n  \n  const removeItem = (id) => {\n    setCartItems(prev => prev.filter(item => item.id !== id));\n  };\n  \n  const totalPrice = cartItems.reduce(\n    (sum, item) => sum + item.price * item.quantity, \n    0\n  );\n  \n  return (\n    <>\n      <button \n        className="relative p-2"\n        onClick={() => setIsOpen(true)}\n      >\n        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />\n        </svg>\n        <span className="absolute top-0 right-0 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">\n          {cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        </span>\n      </button>\n      \n      <Drawer\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        title="Warenkorb"\n        placement="right"\n        footer={\n          <div className="w-full">\n            <div className="flex justify-between font-bold mb-4">\n              <span>Gesamtsumme:</span>\n              <span>{totalPrice.toFixed(2)} \u20ac</span>\n            </div>\n            <Button \n              className="w-full"\n              onClick={() => console.log(\'Zur Kasse\')}\n              disabled={cartItems.length === 0}\n            >\n              Zur Kasse\n            </Button>\n          </div>\n        }\n      >\n        {cartItems.length === 0 ? (\n          <div className="flex flex-col items-center justify-center py-8">\n            <svg className="w-16 h-16 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />\n            </svg>\n            <p className="text-gray-500">Ihr Warenkorb ist leer</p>\n            <button \n              className="mt-4 text-primary-600 hover:text-primary-800"\n              onClick={() => setIsOpen(false)}\n            >\n              Weiter einkaufen\n            </button>\n          </div>\n        ) : (\n          <div className="space-y-4">\n            {cartItems.map(item => (\n              <div key={item.id} className="flex border-b pb-4">\n                <div className="w-16 h-16 bg-gray-100 rounded"></div>\n                <div className="ml-4 flex-1">\n                  <div className="flex justify-between">\n                    <h3 className="font-medium">{item.name}</h3>\n                    <button \n                      className="text-gray-400 hover:text-gray-600"\n                      onClick={() => removeItem(item.id)}\n                    >\n                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />\n                      </svg>\n                    </button>\n                  </div>\n                  <p className="text-gray-500">{item.price.toFixed(2)} \u20ac</p>\n                  <div className="flex items-center mt-2">\n                    <button \n                      className="w-8 h-8 border rounded-l-md flex items-center justify-center"\n                      onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                    >\n                      -\n                    </button>\n                    <span className="w-10 h-8 border-t border-b flex items-center justify-center">\n                      {item.quantity}\n                    </span>\n                    <button \n                      className="w-8 h-8 border rounded-r-md flex items-center justify-center"\n                      onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                    >\n                      +\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </Drawer>\n    </>\n  );\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);