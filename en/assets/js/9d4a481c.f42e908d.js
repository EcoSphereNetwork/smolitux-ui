"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3693],{6957:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"guides/quickstart","title":"Schnellstart-Anleitung","description":"Diese Anleitung hilft Ihnen, schnell mit Smolitux UI zu beginnen und die Komponenten in Ihrem React-Projekt zu verwenden.","source":"@site/wiki/guides/quickstart.md","sourceDirName":"guides","slug":"/guides/quickstart","permalink":"/smolitux-ui/en/wiki/guides/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/guides/quickstart.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Open-Source Licenses","permalink":"/smolitux-ui/en/wiki/guides/open-source-licenses"},"next":{"title":"Sprachsteuerung in Smolitux UI","permalink":"/smolitux-ui/en/wiki/guides/voice-control-guide"}}');var r=t(4848),s=t(8453);const o={},a="Schnellstart-Anleitung",d={},l=[{value:"Installation",id:"installation",level:2},{value:"Einrichtung",id:"einrichtung",level:2},{value:"Verwendung der Komponenten",id:"verwendung-der-komponenten",level:2},{value:"Anpassung des Themes",id:"anpassung-des-themes",level:2},{value:"Responsive Design",id:"responsive-design",level:2},{value:"N\xe4chste Schritte",id:"n\xe4chste-schritte",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"schnellstart-anleitung",children:"Schnellstart-Anleitung"})}),"\n",(0,r.jsx)(n.p,{children:"Diese Anleitung hilft Ihnen, schnell mit Smolitux UI zu beginnen und die Komponenten in Ihrem React-Projekt zu verwenden."}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"Installieren Sie die Smolitux UI Pakete \xfcber npm oder yarn:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Mit npm\nnpm install @smolitux/core @smolitux/layout @smolitux/charts\n\n# Mit yarn\nyarn add @smolitux/core @smolitux/layout @smolitux/charts\n"})}),"\n",(0,r.jsx)(n.h2,{id:"einrichtung",children:"Einrichtung"}),"\n",(0,r.jsxs)(n.p,{children:["Smolitux UI verwendet ein Theming-System, das \xfcber den ",(0,r.jsx)(n.code,{children:"ThemeProvider"})," bereitgestellt wird. Wickeln Sie Ihre Anwendung in den ",(0,r.jsx)(n.code,{children:"ThemeProvider"})," ein, um das Standard-Theme zu verwenden:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@smolitux/theme';\nimport App from './App';\n\nReactDOM.render(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"verwendung-der-komponenten",children:"Verwendung der Komponenten"}),"\n",(0,r.jsx)(n.p,{children:"Nach der Installation k\xf6nnen Sie die Komponenten direkt in Ihren React-Komponenten importieren und verwenden:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import React, { useState } from \'react\';\nimport { Button, Input, Card } from \'@smolitux/core\';\nimport { Container, Grid } from \'@smolitux/layout\';\n\nfunction LoginForm() {\n  const [email, setEmail] = useState(\'\');\n  const [password, setPassword] = useState(\'\');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Anmeldung verarbeiten\n    console.log(\'Anmeldung mit:\', email, password);\n  };\n\n  return (\n    <Container>\n      <Card title="Anmelden">\n        <form onSubmit={handleSubmit}>\n          <Grid spacing="md">\n            <Input\n              label="E-Mail"\n              type="email"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <Input\n              label="Passwort"\n              type="password"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <Button type="submit" variant="primary">\n              Anmelden\n            </Button>\n          </Grid>\n        </form>\n      </Card>\n    </Container>\n  );\n}\n\nexport default LoginForm;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"anpassung-des-themes",children:"Anpassung des Themes"}),"\n",(0,r.jsxs)(n.p,{children:["Sie k\xf6nnen das Standard-Theme anpassen, indem Sie ein benutzerdefiniertes Theme an den ",(0,r.jsx)(n.code,{children:"ThemeProvider"})," \xfcbergeben:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, createTheme } from '@smolitux/theme';\nimport App from './App';\n\n// Benutzerdefiniertes Theme erstellen\nconst customTheme = createTheme({\n  colors: {\n    primary: '#3498db',\n    secondary: '#2ecc71',\n    error: '#e74c3c',\n    warning: '#f39c12',\n    info: '#1abc9c',\n    success: '#27ae60',\n  },\n  fonts: {\n    body: '\"Open Sans\", sans-serif',\n    heading: '\"Montserrat\", sans-serif',\n  },\n  // Weitere Theme-Anpassungen...\n});\n\nReactDOM.render(\n  <ThemeProvider theme={customTheme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"responsive-design",children:"Responsive Design"}),"\n",(0,r.jsx)(n.p,{children:"Smolitux UI Komponenten sind standardm\xe4\xdfig responsiv. Das Grid-System unterst\xfctzt verschiedene Breakpoints:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { Grid } from '@smolitux/layout';\n\nfunction ResponsiveLayout() {\n  return (\n    <Grid>\n      {/* Diese Spalte nimmt 12/12 auf mobilen Ger\xe4ten, 6/12 auf Tablets und 4/12 auf Desktop-Ger\xe4ten ein */}\n      <Grid.Item xs={12} md={6} lg={4}>\n        Inhalt 1\n      </Grid.Item>\n      <Grid.Item xs={12} md={6} lg={4}>\n        Inhalt 2\n      </Grid.Item>\n      <Grid.Item xs={12} md={12} lg={4}>\n        Inhalt 3\n      </Grid.Item>\n    </Grid>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"n\xe4chste-schritte",children:"N\xe4chste Schritte"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Erkunden Sie die ",(0,r.jsx)(n.a,{href:"/smolitux-ui/en/wiki/components/overview",children:"Komponenten-\xdcbersicht"}),", um alle verf\xfcgbaren Komponenten kennenzulernen"]}),"\n",(0,r.jsx)(n.li,{children:"Lesen Sie die detaillierte Dokumentation f\xfcr jede Komponente"}),"\n",(0,r.jsxs)(n.li,{children:["Sehen Sie sich die ",(0,r.jsx)(n.a,{href:"/smolitux-ui/en/wiki/api/reference",children:"API-Referenz"})," f\xfcr fortgeschrittene Anpassungen an"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);