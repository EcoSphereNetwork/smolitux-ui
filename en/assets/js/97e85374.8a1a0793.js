"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1849],{6262:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/voice-control-guide","title":"Sprachsteuerung in Smolitux UI","description":"Diese Anleitung zeigt, wie Sie die Sprachsteuerungsfunktionen von Smolitux UI nutzen und insbesondere ein Modal per Sprachbefehl \xf6ffnen und schlie\xdfen k\xf6nnen.","source":"@site/wiki/guides/voice-control-guide.md","sourceDirName":"guides","slug":"/guides/voice-control-guide","permalink":"/smolitux-ui/en/wiki/guides/voice-control-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/guides/voice-control-guide.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Schnellstart-Anleitung","permalink":"/smolitux-ui/en/wiki/guides/quickstart"},"next":{"title":"Verbesserungsplan f\xfcr smolitux-ui","permalink":"/smolitux-ui/en/wiki/improvement-plan/"}}');var r=o(4848),t=o(8453);const s={},c="Sprachsteuerung in Smolitux UI",l={},d=[{value:"1. Voice Control Infrastruktur",id:"1-voice-control-infrastruktur",level:2},{value:"2. Komponenten mit <code>withVoiceControl</code> erweitern",id:"2-komponenten-mit-withvoicecontrol-erweitern",level:2},{value:"3. Modal per Sprachbefehl steuern",id:"3-modal-per-sprachbefehl-steuern",level:2},{value:"4. Provider einbinden",id:"4-provider-einbinden",level:2},{value:"Zusammenfassung",id:"zusammenfassung",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"sprachsteuerung-in-smolitux-ui",children:"Sprachsteuerung in Smolitux UI"})}),"\n",(0,r.jsx)(n.p,{children:"Diese Anleitung zeigt, wie Sie die Sprachsteuerungsfunktionen von Smolitux UI nutzen und insbesondere ein Modal per Sprachbefehl \xf6ffnen und schlie\xdfen k\xf6nnen."}),"\n",(0,r.jsx)(n.h2,{id:"1-voice-control-infrastruktur",children:"1. Voice Control Infrastruktur"}),"\n",(0,r.jsxs)(n.p,{children:["Die Sprachsteuerung basiert auf dem ",(0,r.jsx)(n.code,{children:"VoiceControlProvider"})," und dem ",(0,r.jsx)(n.code,{children:"withVoiceControl"})," Higher-Order Component (HOC). Der Provider stellt Registrierungsfunktionen bereit:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const registerComponent = (id: string, commands: string[]) =>\n  manager.registerComponent(id, commands);\nconst unregisterComponent = (id: string) => manager.unregisterComponent(id);\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"2-komponenten-mit-withvoicecontrol-erweitern",children:["2. Komponenten mit ",(0,r.jsx)(n.code,{children:"withVoiceControl"})," erweitern"]}),"\n",(0,r.jsx)(n.p,{children:"Binden Sie interaktive Komponenten mit dem HOC ein. Dadurch werden sie automatisch registriert und reagieren auf erkannte Befehle:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export function withVoiceControl<P extends object>(\n  Component: React.ComponentType<P>,\n  defaultCommands: string[] = []\n) {\n  return React.forwardRef<unknown, P & VoiceControlProps>((props, ref) => {\n    const { voiceCommands = defaultCommands, voiceEnabled = true, onVoiceCommand, ...rest } = props;\n    ...\n    useEffect(() => {\n      if (voiceEnabled && voiceCommands.length > 0) {\n        registerComponent(id, voiceCommands);\n      }\n      return () => {\n        if (voiceEnabled) {\n          unregisterComponent(id);\n        }\n      };\n    }, [id, registerComponent, unregisterComponent, voiceEnabled, voiceCommands]);\n\n    useEffect(() => {\n      if (targetComponent === id && lastCommand && onVoiceCommand) {\n        onVoiceCommand(lastCommand);\n      }\n    }, [id, lastCommand, onVoiceCommand, targetComponent]);\n\n    return <Component ref={ref || componentRef} {...(rest as P)} />;\n  });\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"3-modal-per-sprachbefehl-steuern",children:"3. Modal per Sprachbefehl steuern"}),"\n",(0,r.jsxs)(n.p,{children:["Das folgende Beispiel zeigt eine ",(0,r.jsx)(n.code,{children:"VoiceModal"}),', die auf Befehle wie \u201eschlie\xdfen\u201c oder \u201ecancel" reagiert. Ein ',(0,r.jsx)(n.code,{children:"VoiceButton"}),' \xf6ffnet das Modal mit Befehlen wie \u201e\xf6ffnen" oder \u201eopen":']}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// src/components/voice/VoiceModal.tsx\nimport React from 'react';\nimport { Modal, ModalProps } from '@smolitux/core';\nimport { withVoiceControl, VoiceControlProps } from '@smolitux/voice-control';\n\nexport type VoiceModalProps = ModalProps & VoiceControlProps;\n\nconst VoiceModalBase: React.FC<VoiceModalProps> = ({\n  onVoiceCommand,\n  onClose,\n  children,\n  ...props\n}) => {\n  const handleVoiceCommand = (command: string) => {\n    const lowerCommand = command.toLowerCase();\n\n    // Befehle zum Schlie\xdfen des Modals\n    if (\n      lowerCommand === 'schlie\xdfen' ||\n      lowerCommand === 'close' ||\n      lowerCommand === 'abbrechen' ||\n      lowerCommand === 'cancel'\n    ) {\n      if (onClose) {\n        onClose();\n      }\n    }\n\n    if (onVoiceCommand) {\n      onVoiceCommand(command);\n    }\n  };\n\n  return (\n    <Modal onClose={onClose} {...props}>\n      {children}\n    </Modal>\n  );\n};\n\nexport const VoiceModal = withVoiceControl(\n  VoiceModalBase,\n  ['schlie\xdfen', 'close', 'abbrechen', 'cancel']\n);\n\nconst [isOpen, setIsOpen] = useState(false);\n\n<VoiceButton onClick={() => setIsOpen(true)} voiceCommands={['\xf6ffnen', 'open']}>\n  Modal \xf6ffnen\n</VoiceButton>\n\n<VoiceModal isOpen={isOpen} onClose={() => setIsOpen(false)} title=\"Beispiel-Modal\">\n  <p>Dieses Modal kann mit Sprachbefehlen geschlossen werden.</p>\n  <VoiceButton onClick={() => setIsOpen(false)}>Schlie\xdfen</VoiceButton>\n</VoiceModal>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"4-provider-einbinden",children:"4. Provider einbinden"}),"\n",(0,r.jsxs)(n.p,{children:["Um die Sprachsteuerung zu aktivieren, umgeben Sie Ihre App mit dem ",(0,r.jsx)(n.code,{children:"VoiceControlProvider"})," und konfigurieren Sie ggf. eine Erkennungs-Engine:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { VoiceControlProvider } from '@smolitux/voice-control';\n\nfunction App() {\n  return (\n    <VoiceControlProvider\n      engineType=\"tensorFlow\"\n      tensorFlowOptions={{\n        modelType: 'BROWSER_FFT',\n        vocabulary: 'general',\n        scoreThreshold: 0.75,\n      }}\n    >\n      <YourApp />\n    </VoiceControlProvider>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"zusammenfassung",children:"Zusammenfassung"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Binden Sie ",(0,r.jsx)(n.code,{children:"VoiceControlProvider"})," global ein."]}),"\n",(0,r.jsxs)(n.li,{children:["Verwenden Sie ",(0,r.jsx)(n.code,{children:"withVoiceControl"}),", um Komponenten mit Sprachbefehlen auszustatten."]}),"\n",(0,r.jsxs)(n.li,{children:["Nutzen Sie eine ",(0,r.jsx)(n.code,{children:"VoiceModal"}),", um Dialoge per Sprache zu \xf6ffnen und zu schlie\xdfen."]}),"\n",(0,r.jsxs)(n.li,{children:["Registrieren Sie individuelle Befehle \xfcber die ",(0,r.jsx)(n.code,{children:"voiceCommands"}),"\u2011Prop."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Damit l\xe4sst sich die Modalsteuerung vollst\xe4ndig per Sprache bedienen."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var i=o(6540);const r={},t=i.createContext(r);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);