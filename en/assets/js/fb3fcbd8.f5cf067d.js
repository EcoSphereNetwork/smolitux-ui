"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[959],{7161:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"testing/testplan/Testinfrastruktur","title":"Testinfrastruktur f\xfcr smolitux UI","description":"Dieses Dokument beschreibt die technische Infrastruktur, die f\xfcr die Durchf\xfchrung der Tests der smolitux UI-Komponenten erforderlich ist.","source":"@site/wiki/testing/testplan/02-Testinfrastruktur.md","sourceDirName":"testing/testplan","slug":"/testing/testplan/Testinfrastruktur","permalink":"/smolitux-ui/en/wiki/testing/testplan/Testinfrastruktur","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/testing/testplan/02-Testinfrastruktur.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Testplan f\xfcr Smolitux UI Komponenten","permalink":"/smolitux-ui/en/wiki/testing/testplan/Testplan-\xdcbersicht"},"next":{"title":"Unit-Tests f\xfcr smolitux UI Komponenten","permalink":"/smolitux-ui/en/wiki/testing/testplan/Unit-Tests"}}');var i=n(4848),r=n(8453);const o={},l="Testinfrastruktur f\xfcr smolitux UI",d={},c=[{value:"1. Testframework und Tools",id:"1-testframework-und-tools",level:2},{value:"2. Jest-Konfiguration",id:"2-jest-konfiguration",level:2},{value:"3. Jest Setup-Datei",id:"3-jest-setup-datei",level:2},{value:"4. Mock-Dateien einrichten",id:"4-mock-dateien-einrichten",level:2},{value:"5. Testordnerstruktur",id:"5-testordnerstruktur",level:2},{value:"6. Test-Skripte",id:"6-test-skripte",level:2},{value:"7. Playwright-Konfiguration f\xfcr E2E-Tests",id:"7-playwright-konfiguration-f\xfcr-e2e-tests",level:2},{value:"8. Storybook-Konfiguration f\xfcr visuelle Tests",id:"8-storybook-konfiguration-f\xfcr-visuelle-tests",level:2},{value:"9. Testdaten und -utilities",id:"9-testdaten-und--utilities",level:2},{value:"10. Empfohlene VS Code-Erweiterungen f\xfcr Tests",id:"10-empfohlene-vs-code-erweiterungen-f\xfcr-tests",level:2},{value:"11. Kontinuierliche Integration",id:"11-kontinuierliche-integration",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"testinfrastruktur-f\xfcr-smolitux-ui",children:"Testinfrastruktur f\xfcr smolitux UI"})}),"\n",(0,i.jsx)(t.p,{children:"Dieses Dokument beschreibt die technische Infrastruktur, die f\xfcr die Durchf\xfchrung der Tests der smolitux UI-Komponenten erforderlich ist."}),"\n",(0,i.jsx)(t.h2,{id:"1-testframework-und-tools",children:"1. Testframework und Tools"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Tool"}),(0,i.jsx)(t.th,{children:"Verwendungszweck"}),(0,i.jsx)(t.th,{children:"Installation"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Jest"})}),(0,i.jsx)(t.td,{children:"Haupttestrunner f\xfcr Unit- und Integrationstests"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"npm install --save-dev jest @types/jest ts-jest"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"React Testing Library"})}),(0,i.jsx)(t.td,{children:"DOM-basierte Tests f\xfcr React-Komponenten"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"npm install --save-dev @testing-library/react @testing-library/user-event @testing-library/jest-dom"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Storybook"})}),(0,i.jsx)(t.td,{children:"Isolierte Komponententests und visuelle Testing-Grundlage"}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"npx storybook init"})," (falls noch nicht eingerichtet)"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Chromatic"})}),(0,i.jsx)(t.td,{children:"Visuelle Regressionstests"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"npm install --save-dev chromatic"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Playwright"})}),(0,i.jsx)(t.td,{children:"End-to-End-Tests und Browserkompatibilit\xe4tstests"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"npm install --save-dev @playwright/test"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"MSW"})}),(0,i.jsx)(t.td,{children:"API-Mocking f\xfcr Tests"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"npm install --save-dev msw"})})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"2-jest-konfiguration",children:"2. Jest-Konfiguration"}),"\n",(0,i.jsxs)(t.p,{children:["Erstellen Sie eine ",(0,i.jsx)(t.code,{children:"jest.config.js"})," im Wurzelverzeichnis mit folgender Konfiguration:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"module.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'jsdom',\n  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],\n  moduleNameMapper: {\n    // CSS-Module-Mocking\n    '\\\\.(css|less|scss|sass)$': 'identity-obj-proxy',\n    // SVG und andere Assets\n    '\\\\.(jpg|jpeg|png|gif|svg)$': '<rootDir>/src/__mocks__/fileMock.js',\n    // Alias-Aufl\xf6sung f\xfcr '@smolitux/'\n    '^@smolitux/(.*)$': '<rootDir>/packages/@smolitux/$1',\n  },\n  testPathIgnorePatterns: ['/node_modules/', '/dist/'],\n  collectCoverageFrom: [\n    'packages/@smolitux/**/*.{ts,tsx}',\n    '!packages/@smolitux/**/*.stories.{ts,tsx}',\n    '!packages/@smolitux/**/*.d.ts',\n    '!**/node_modules/**',\n  ],\n  coverageThreshold: {\n    global: {\n      branches: 80,\n      functions: 80,\n      lines: 80,\n      statements: 80,\n    },\n  },\n  testMatch: ['**/__tests__/**/*.test.{ts,tsx}'],\n};\n"})}),"\n",(0,i.jsx)(t.h2,{id:"3-jest-setup-datei",children:"3. Jest Setup-Datei"}),"\n",(0,i.jsxs)(t.p,{children:["Erstellen Sie eine ",(0,i.jsx)(t.code,{children:"jest.setup.js"})," im Wurzelverzeichnis:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"import '@testing-library/jest-dom';\n\n// Globale Mock-Funktionen\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}));\n\n// Mock f\xfcr window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(),\n    removeListener: jest.fn(),\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Zus\xe4tzliche globale Testing-Utilities k\xf6nnen hier hinzugef\xfcgt werden\n"})}),"\n",(0,i.jsx)(t.h2,{id:"4-mock-dateien-einrichten",children:"4. Mock-Dateien einrichten"}),"\n",(0,i.jsx)(t.p,{children:"Erstellen Sie folgende Mock-Dateien:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"// src/__mocks__/fileMock.js\nmodule.exports = 'test-file-stub';\n\n// src/__mocks__/styleMock.js\nmodule.exports = {};\n"})}),"\n",(0,i.jsx)(t.h2,{id:"5-testordnerstruktur",children:"5. Testordnerstruktur"}),"\n",(0,i.jsx)(t.p,{children:"F\xfcr jede Komponente sollte die folgende konsistente Teststruktur verwendet werden:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"components/\n\u2514\u2500\u2500 ComponentName/\n    \u251c\u2500\u2500 ComponentName.tsx          # Komponenten-Code\n    \u251c\u2500\u2500 ComponentName.stories.tsx  # Storybook-Stories\n    \u251c\u2500\u2500 index.ts                   # Export-Datei\n    \u2514\u2500\u2500 __tests__/\n        \u251c\u2500\u2500 ComponentName.test.tsx      # Unit-Tests\n        \u2514\u2500\u2500 ComponentName.int.test.tsx  # Integrationstests (falls n\xf6tig)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"6-test-skripte",children:"6. Test-Skripte"}),"\n",(0,i.jsxs)(t.p,{children:["F\xfcgen Sie folgende Skripte in Ihre ",(0,i.jsx)(t.code,{children:"package.json"})," ein:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "scripts": {\n    "test": "jest",\n    "test:watch": "jest --watch",\n    "test:coverage": "jest --coverage",\n    "test:ci": "jest --ci --coverage",\n    "test:e2e": "playwright test",\n    "test:visual": "chromatic --project-token=<your-token>",\n    "storybook": "start-storybook -p 6006",\n    "build-storybook": "build-storybook"\n  }\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"7-playwright-konfiguration-f\xfcr-e2e-tests",children:"7. Playwright-Konfiguration f\xfcr E2E-Tests"}),"\n",(0,i.jsxs)(t.p,{children:["Erstellen Sie eine ",(0,i.jsx)(t.code,{children:"playwright.config.ts"})," im Wurzelverzeichnis:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"import { PlaywrightTestConfig } from '@playwright/test';\n\nconst config: PlaywrightTestConfig = {\n  testDir: './e2e-tests',\n  timeout: 30000,\n  forbidOnly: !!process.env.CI,\n  retries: process.env.CI ? 2 : 0,\n  workers: process.env.CI ? 1 : undefined,\n  reporter: 'html',\n  use: {\n    trace: 'on-first-retry',\n    screenshot: 'only-on-failure',\n  },\n  projects: [\n    {\n      name: 'chromium',\n      use: { browserName: 'chromium' },\n    },\n    {\n      name: 'firefox',\n      use: { browserName: 'firefox' },\n    },\n    {\n      name: 'webkit',\n      use: { browserName: 'webkit' },\n    },\n  ],\n};\n\nexport default config;\n"})}),"\n",(0,i.jsx)(t.h2,{id:"8-storybook-konfiguration-f\xfcr-visuelle-tests",children:"8. Storybook-Konfiguration f\xfcr visuelle Tests"}),"\n",(0,i.jsxs)(t.p,{children:["Aktualisieren Sie Ihre ",(0,i.jsx)(t.code,{children:".storybook/main.js"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"module.exports = {\n  stories: [\n    '../packages/@smolitux/**/*.stories.@(tsx|mdx)',\n  ],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    '@storybook/addon-interactions',\n    '@storybook/addon-a11y',\n  ],\n  typescript: {\n    check: false,\n    reactDocgen: 'react-docgen-typescript',\n  },\n  core: {\n    builder: '@storybook/builder-webpack5',\n  },\n};\n"})}),"\n",(0,i.jsx)(t.h2,{id:"9-testdaten-und--utilities",children:"9. Testdaten und -utilities"}),"\n",(0,i.jsx)(t.p,{children:"Erstellen Sie einen gemeinsamen Ordner f\xfcr Testdaten und Hilfsfunktionen:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"\u251c\u2500\u2500 test-utils/\n\u2502   \u251c\u2500\u2500 index.ts          # Export aller Utilities\n\u2502   \u251c\u2500\u2500 test-data.ts      # Gemeinsame Testdaten\n\u2502   \u251c\u2500\u2500 test-helpers.ts   # Hilfsfunktionen f\xfcr Tests\n\u2502   \u2514\u2500\u2500 test-mocks.ts     # Gemeinsame Mocks\n"})}),"\n",(0,i.jsx)(t.h2,{id:"10-empfohlene-vs-code-erweiterungen-f\xfcr-tests",children:"10. Empfohlene VS Code-Erweiterungen f\xfcr Tests"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Jest Runner"}),"\n",(0,i.jsx)(t.li,{children:"Testing Library"}),"\n",(0,i.jsx)(t.li,{children:"Playwright Test for VSCode"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"11-kontinuierliche-integration",children:"11. Kontinuierliche Integration"}),"\n",(0,i.jsx)(t.p,{children:'Einrichtung einer CI-Pipeline (GitHub Actions, GitLab CI o.\xe4.) f\xfcr automatisierte Tests bei jedem Commit und Pull Request. Die detaillierte Konfiguration wird im Dokument "08-CI-CD-Integration.md" beschrieben.'})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);