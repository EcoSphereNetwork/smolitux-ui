"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3249],{7646:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>l,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"architecture/build-process","title":"Build-Prozess","description":"Diese Dokumentation beschreibt den Build-Prozess der Smolitux-UI-Bibliothek.","source":"@site/wiki/architecture/build-process.md","sourceDirName":"architecture","slug":"/architecture/build-process","permalink":"/smolitux-ui/wiki/architecture/build-process","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/architecture/build-process.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Architekturdesign der Resonance UI Bibliothek","permalink":"/smolitux-ui/wiki/architecture/architecture-design"},"next":{"title":"Komponenten-Spezifikation der Resonance UI Bibliothek","permalink":"/smolitux-ui/wiki/architecture/component-specification"}}');var r=i(4848),t=i(8453);const l={},o="Build-Prozess",d={},u=[{value:"\xdcbersicht",id:"\xfcbersicht",level:2},{value:"Build-Tools",id:"build-tools",level:2},{value:"TypeScript",id:"typescript",level:3},{value:"tsup",id:"tsup",level:3},{value:"Lerna",id:"lerna",level:3},{value:"Jest",id:"jest",level:3},{value:"Storybook",id:"storybook",level:3},{value:"Build-Prozess",id:"build-prozess-1",level:2},{value:"Kompilierung und B\xfcndelung",id:"kompilierung-und-b\xfcndelung",level:3},{value:"Typgenerierung",id:"typgenerierung",level:3},{value:"Tests",id:"tests",level:3},{value:"Dokumentation",id:"dokumentation",level:3},{value:"Ver\xf6ffentlichung",id:"ver\xf6ffentlichung",level:3},{value:"Continuous Integration",id:"continuous-integration",level:2},{value:"Lokaler Build",id:"lokaler-build",level:2},{value:"Fehlerbehebung",id:"fehlerbehebung",level:2},{value:"Problem: TypeScript-Fehler",id:"problem-typescript-fehler",level:3},{value:"Problem: Build-Fehler",id:"problem-build-fehler",level:3},{value:"Problem: Test-Fehler",id:"problem-test-fehler",level:3},{value:"Fazit",id:"fazit",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"build-prozess",children:"Build-Prozess"})}),"\n",(0,r.jsx)(n.p,{children:"Diese Dokumentation beschreibt den Build-Prozess der Smolitux-UI-Bibliothek."}),"\n",(0,r.jsx)(n.h2,{id:"\xfcbersicht",children:"\xdcbersicht"}),"\n",(0,r.jsx)(n.p,{children:"Der Build-Prozess von Smolitux-UI verwendet verschiedene Tools und Technologien, um die Komponenten zu kompilieren, zu b\xfcndeln und zu ver\xf6ffentlichen."}),"\n",(0,r.jsx)(n.h2,{id:"build-tools",children:"Build-Tools"}),"\n",(0,r.jsx)(n.h3,{id:"typescript",children:"TypeScript"}),"\n",(0,r.jsx)(n.p,{children:"TypeScript wird verwendet, um statische Typisierung zu erm\xf6glichen und den Code zu kompilieren."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// tsconfig.base.json\n{\n  "compilerOptions": {\n    "target": "es5",\n    "lib": ["dom", "dom.iterable", "esnext"],\n    "allowJs": true,\n    "skipLibCheck": true,\n    "esModuleInterop": true,\n    "allowSyntheticDefaultImports": true,\n    "strict": true,\n    "forceConsistentCasingInFileNames": true,\n    "noFallthroughCasesInSwitch": true,\n    "module": "esnext",\n    "moduleResolution": "node",\n    "resolveJsonModule": true,\n    "isolatedModules": true,\n    "jsx": "react-jsx",\n    "declaration": true,\n    "declarationMap": true,\n    "sourceMap": true,\n    "baseUrl": "."\n  },\n  "exclude": ["node_modules", "dist", "**/*.test.ts", "**/*.test.tsx"]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"tsup",children:"tsup"}),"\n",(0,r.jsx)(n.p,{children:"tsup wird verwendet, um TypeScript-Code zu kompilieren und zu b\xfcndeln. Es ist eine einfache und schnelle Alternative zu Rollup und Webpack."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// package.json\n{\n  "scripts": {\n    "build": "tsup src/index.ts --format cjs,esm --dts",\n    "build:js": "tsup src/index.ts --format cjs,esm",\n    "build:types": "tsc --emitDeclarationOnly"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"lerna",children:"Lerna"}),"\n",(0,r.jsx)(n.p,{children:"Lerna wird verwendet, um das Monorepo zu verwalten und die Pakete zu ver\xf6ffentlichen."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// lerna.json\n{\n  "version": "0.2.1",\n  "npmClient": "npm",\n  "useWorkspaces": true,\n  "packages": ["packages/*", "packages/@smolitux/*"],\n  "$schema": "node_modules/lerna/schemas/lerna-schema.json",\n  "command": {\n    "publish": {\n      "conventionalCommits": true,\n      "yes": true\n    },\n    "run": {\n      "stream": true\n    },\n    "version": {\n      "message": "chore(release): publish %s",\n      "conventionalCommits": true,\n      "createRelease": "github"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"jest",children:"Jest"}),"\n",(0,r.jsx)(n.p,{children:"Jest wird verwendet, um Tests auszuf\xfchren."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:"// jest.config.js\nmodule.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'jsdom',\n  setupFilesAfterEnv: ['@testing-library/jest-dom/extend-expect'],\n  moduleNameMapper: {\n    '\\\\.(css|less|scss|sass)$': 'identity-obj-proxy'\n  },\n  collectCoverageFrom: [\n    'src/**/*.{ts,tsx}',\n    '!src/**/*.stories.{ts,tsx}',\n    '!src/**/*.test.{ts,tsx}'\n  ],\n  coverageThreshold: {\n    global: {\n      branches: 80,\n      functions: 80,\n      lines: 80,\n      statements: 80\n    }\n  }\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"storybook",children:"Storybook"}),"\n",(0,r.jsx)(n.p,{children:"Storybook wird verwendet, um Komponenten zu dokumentieren und zu testen."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:"// .storybook/main.js\nmodule.exports = {\n  stories: [\n    '../packages/**/*.stories.mdx',\n    '../packages/**/*.stories.@(js|jsx|ts|tsx)'\n  ],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    '@storybook/addon-interactions',\n    '@storybook/addon-a11y'\n  ],\n  framework: {\n    name: '@storybook/react-webpack5',\n    options: {}\n  },\n  docs: {\n    autodocs: 'tag'\n  }\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"build-prozess-1",children:"Build-Prozess"}),"\n",(0,r.jsx)(n.p,{children:"Der Build-Prozess besteht aus mehreren Schritten:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Kompilierung"}),": TypeScript-Code wird zu JavaScript kompiliert."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"B\xfcndelung"}),": JavaScript-Code wird geb\xfcndelt."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Typgenerierung"}),": TypeScript-Deklarationsdateien werden generiert."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tests"}),": Tests werden ausgef\xfchrt."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dokumentation"}),": Storybook-Dokumentation wird generiert."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ver\xf6ffentlichung"}),": Pakete werden ver\xf6ffentlicht."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"kompilierung-und-b\xfcndelung",children:"Kompilierung und B\xfcndelung"}),"\n",(0,r.jsx)(n.p,{children:"Die Kompilierung und B\xfcndelung erfolgt mit tsup. tsup verwendet esbuild, um den Code zu kompilieren und zu b\xfcndeln."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Dieser Befehl f\xfchrt ",(0,r.jsx)(n.code,{children:"tsup src/index.ts --format cjs,esm --dts"})," f\xfcr jedes Paket aus. Dies generiert CommonJS- und ES-Module-Bundles sowie TypeScript-Deklarationsdateien."]}),"\n",(0,r.jsx)(n.h3,{id:"typgenerierung",children:"Typgenerierung"}),"\n",(0,r.jsxs)(n.p,{children:["Die Typgenerierung erfolgt mit TypeScript. TypeScript generiert Deklarationsdateien (",(0,r.jsx)(n.code,{children:".d.ts"}),"), die die Typen der Komponenten und Funktionen beschreiben."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build:types\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Dieser Befehl f\xfchrt ",(0,r.jsx)(n.code,{children:"tsc --emitDeclarationOnly"})," f\xfcr jedes Paket aus. Dies generiert nur TypeScript-Deklarationsdateien, ohne JavaScript-Code zu kompilieren."]}),"\n",(0,r.jsx)(n.h3,{id:"tests",children:"Tests"}),"\n",(0,r.jsx)(n.p,{children:"Die Tests werden mit Jest ausgef\xfchrt."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm test\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Dieser Befehl f\xfchrt ",(0,r.jsx)(n.code,{children:"jest"})," f\xfcr jedes Paket aus. Dies f\xfchrt alle Tests aus und generiert einen Testbericht."]}),"\n",(0,r.jsx)(n.h3,{id:"dokumentation",children:"Dokumentation"}),"\n",(0,r.jsx)(n.p,{children:"Die Dokumentation wird mit Storybook generiert."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build-storybook\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Dieser Befehl f\xfchrt ",(0,r.jsx)(n.code,{children:"storybook build"})," aus. Dies generiert eine statische Website mit der Storybook-Dokumentation."]}),"\n",(0,r.jsx)(n.h3,{id:"ver\xf6ffentlichung",children:"Ver\xf6ffentlichung"}),"\n",(0,r.jsx)(n.p,{children:"Die Ver\xf6ffentlichung erfolgt mit Lerna."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx lerna publish\n"})}),"\n",(0,r.jsx)(n.p,{children:"Dieser Befehl ver\xf6ffentlicht alle Pakete auf npm. Er erh\xf6ht die Versionsnummer, erstellt Git-Tags und pusht die \xc4nderungen."}),"\n",(0,r.jsx)(n.h2,{id:"continuous-integration",children:"Continuous Integration"}),"\n",(0,r.jsx)(n.p,{children:"Die Continuous Integration erfolgt mit GitHub Actions. Die CI-Pipeline f\xfchrt die folgenden Schritte aus:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Checkout"}),": Der Code wird ausgecheckt."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Setup"}),": Node.js wird eingerichtet."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Install"}),": Die Abh\xe4ngigkeiten werden installiert."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build"}),": Der Code wird gebaut."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test"}),": Die Tests werden ausgef\xfchrt."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lint"}),": Der Code wird gelinted."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Storybook"}),": Die Storybook-Dokumentation wird gebaut."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Publish"}),": Die Pakete werden ver\xf6ffentlicht (nur bei Tags)."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/ci.yml\nname: CI\n\non:\n  push:\n    branches: [main]\n    tags: ['v*']\n  pull_request:\n    branches: [main]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v2\n        with:\n          node-version: '16'\n      - run: npm ci\n      - run: npm run build\n      - run: npm test\n      - run: npm run lint\n      - run: npm run build-storybook\n      - if: startsWith(github.ref, 'refs/tags/')\n        run: npx lerna publish from-git --yes\n        env:\n          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"lokaler-build",children:"Lokaler Build"}),"\n",(0,r.jsx)(n.p,{children:"F\xfcr den lokalen Build k\xf6nnen die folgenden Befehle verwendet werden:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Installieren der Abh\xe4ngigkeiten\nnpm install\n\n# Bauen aller Pakete\nnpm run build\n\n# Bauen eines bestimmten Pakets\nnpm run build:utils\nnpm run build:core\nnpm run build:ai\nnpm run build:blockchain\nnpm run build:resonance\n\n# Ausf\xfchren der Tests\nnpm test\n\n# Ausf\xfchren von Storybook\nnpm run storybook\n"})}),"\n",(0,r.jsx)(n.h2,{id:"fehlerbehebung",children:"Fehlerbehebung"}),"\n",(0,r.jsx)(n.h3,{id:"problem-typescript-fehler",children:"Problem: TypeScript-Fehler"}),"\n",(0,r.jsx)(n.p,{children:"Wenn TypeScript-Fehler auftreten, k\xf6nnen die folgenden Schritte helfen:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\xdcberpr\xfcfen Sie die tsconfig.json-Dateien."}),"\n",(0,r.jsx)(n.li,{children:"Stellen Sie sicher, dass alle Abh\xe4ngigkeiten installiert sind."}),"\n",(0,r.jsxs)(n.li,{children:["F\xfchren Sie ",(0,r.jsx)(n.code,{children:"tsc --noEmit"})," aus, um Fehler zu identifizieren."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"problem-build-fehler",children:"Problem: Build-Fehler"}),"\n",(0,r.jsx)(n.p,{children:"Wenn Build-Fehler auftreten, k\xf6nnen die folgenden Schritte helfen:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"L\xf6schen Sie die node_modules-Verzeichnisse und die package-lock.json-Datei."}),"\n",(0,r.jsx)(n.li,{children:"Installieren Sie die Abh\xe4ngigkeiten neu."}),"\n",(0,r.jsx)(n.li,{children:"Bauen Sie die Pakete in der richtigen Reihenfolge."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"problem-test-fehler",children:"Problem: Test-Fehler"}),"\n",(0,r.jsx)(n.p,{children:"Wenn Test-Fehler auftreten, k\xf6nnen die folgenden Schritte helfen:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\xdcberpr\xfcfen Sie die Jest-Konfiguration."}),"\n",(0,r.jsx)(n.li,{children:"Stellen Sie sicher, dass alle Abh\xe4ngigkeiten installiert sind."}),"\n",(0,r.jsxs)(n.li,{children:["F\xfchren Sie ",(0,r.jsx)(n.code,{children:"jest --verbose"})," aus, um detaillierte Fehlerinformationen zu erhalten."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"fazit",children:"Fazit"}),"\n",(0,r.jsx)(n.p,{children:"Der Build-Prozess von Smolitux-UI ist darauf ausgelegt, eine modulare und erweiterbare Komponentenbibliothek zu schaffen. Durch die Verwendung moderner Build-Tools und -Technologien k\xf6nnen wir eine effiziente und zuverl\xe4ssige Bibliothek erstellen."})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);