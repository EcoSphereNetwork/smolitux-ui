"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9952],{5116:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"testing/implementation/snapshot-tests","title":"Snapshot-Tests f\xfcr Smolitux UI","description":"Dieses Dokument beschreibt die Implementierung von Snapshot-Tests f\xfcr die Smolitux UI-Bibliothek.","source":"@site/wiki/testing/implementation/snapshot-tests.md","sourceDirName":"testing/implementation","slug":"/testing/implementation/snapshot-tests","permalink":"/smolitux-ui/wiki/testing/implementation/snapshot-tests","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/testing/implementation/snapshot-tests.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"Komponententests f\xfcr Smolitux UI","permalink":"/smolitux-ui/wiki/testing/implementation/component-tests"},"next":{"title":"Pr\xe4sentation: Implementierung des Testplans f\xfcr Smolitux UI","permalink":"/smolitux-ui/wiki/testing/presentation/testplan-implementation"}}');var i=t(4848),r=t(8453);const o={},l="Snapshot-Tests f\xfcr Smolitux UI",d={},a=[{value:"\xdcberblick",id:"\xfcberblick",level:2},{value:"Vorteile von Snapshot-Tests",id:"vorteile-von-snapshot-tests",level:2},{value:"Implementierung",id:"implementierung",level:2},{value:"Button-Komponente",id:"button-komponente",level:3},{value:"Card-Komponente",id:"card-komponente",level:3},{value:"Input-Komponente",id:"input-komponente",level:3},{value:"Ausf\xfchrung der Tests",id:"ausf\xfchrung-der-tests",level:2},{value:"Wartung der Snapshots",id:"wartung-der-snapshots",level:2},{value:"Integration in CI/CD",id:"integration-in-cicd",level:2},{value:"N\xe4chste Schritte",id:"n\xe4chste-schritte",level:2},{value:"Fazit",id:"fazit",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"snapshot-tests-f\xfcr-smolitux-ui",children:"Snapshot-Tests f\xfcr Smolitux UI"})}),"\n",(0,i.jsx)(n.p,{children:"Dieses Dokument beschreibt die Implementierung von Snapshot-Tests f\xfcr die Smolitux UI-Bibliothek."}),"\n",(0,i.jsx)(n.h2,{id:"\xfcberblick",children:"\xdcberblick"}),"\n",(0,i.jsx)(n.p,{children:'Snapshot-Tests sind eine Form von Regressionstests, die sicherstellen, dass die UI-Komponenten konsistent bleiben und keine unbeabsichtigten \xc4nderungen auftreten. Sie erstellen eine "Momentaufnahme" des Komponentenbaums und vergleichen diese bei zuk\xfcnftigen Tests mit der aktuellen Ausgabe.'}),"\n",(0,i.jsx)(n.p,{children:"Die folgenden Komponenten wurden mit Snapshot-Tests abgedeckt:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Button"}),"\n",(0,i.jsx)(n.li,{children:"Card"}),"\n",(0,i.jsx)(n.li,{children:"Input"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"vorteile-von-snapshot-tests",children:"Vorteile von Snapshot-Tests"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Schnelle Erstellung"}),": Snapshot-Tests sind einfach zu erstellen und erfordern wenig Code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Umfassende Abdeckung"}),": Sie testen die gesamte Ausgabe einer Komponente, einschlie\xdflich aller Kinder."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Visuelle Regressionserkennung"}),": Sie erkennen unbeabsichtigte \xc4nderungen an der Komponente."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dokumentation"}),": Sie dienen als Dokumentation f\xfcr das erwartete Verhalten der Komponente."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"implementierung",children:"Implementierung"}),"\n",(0,i.jsx)(n.p,{children:"Die Snapshot-Tests wurden mit Jest und react-test-renderer implementiert. F\xfcr jede Komponente wurden Tests f\xfcr verschiedene Zust\xe4nde und Konfigurationen erstellt."}),"\n",(0,i.jsx)(n.h3,{id:"button-komponente",children:"Button-Komponente"}),"\n",(0,i.jsx)(n.p,{children:"Die Button-Komponente wurde mit Snapshot-Tests f\xfcr verschiedene Varianten, Gr\xf6\xdfen und Zust\xe4nde abgedeckt."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport renderer from 'react-test-renderer';\nimport { Button } from '../Button';\n\ndescribe('Button Snapshots', () => {\n  test('renders correctly with default props', () => {\n    const tree = renderer.create(<Button>Click me</Button>).toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n\n  // Weitere Tests...\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"card-komponente",children:"Card-Komponente"}),"\n",(0,i.jsx)(n.p,{children:"Die Card-Komponente wurde mit Snapshot-Tests f\xfcr verschiedene Varianten, Gr\xf6\xdfen und Zust\xe4nde abgedeckt."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport renderer from 'react-test-renderer';\nimport { Card } from '../Card';\n\ndescribe('Card Snapshots', () => {\n  test('renders correctly with default props', () => {\n    const tree = renderer.create(<Card>Card Content</Card>).toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n\n  // Weitere Tests...\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"input-komponente",children:"Input-Komponente"}),"\n",(0,i.jsx)(n.p,{children:"Die Input-Komponente wurde mit Snapshot-Tests f\xfcr verschiedene Varianten, Gr\xf6\xdfen und Zust\xe4nde abgedeckt."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport renderer from 'react-test-renderer';\nimport { Input } from '../Input';\n\ndescribe('Input Snapshots', () => {\n  test('renders correctly with default props', () => {\n    const tree = renderer.create(<Input />).toJSON();\n    expect(tree).toMatchSnapshot();\n  });\n\n  // Weitere Tests...\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ausf\xfchrung-der-tests",children:"Ausf\xfchrung der Tests"}),"\n",(0,i.jsx)(n.p,{children:"Die Snapshot-Tests k\xf6nnen mit dem folgenden Befehl ausgef\xfchrt werden:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm test\n"})}),"\n",(0,i.jsx)(n.p,{children:"Um die Snapshots zu aktualisieren, wenn sich die Komponenten absichtlich ge\xe4ndert haben:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm run test:update-snapshots\n"})}),"\n",(0,i.jsx)(n.h2,{id:"wartung-der-snapshots",children:"Wartung der Snapshots"}),"\n",(0,i.jsx)(n.p,{children:"Snapshots sollten regelm\xe4\xdfig \xfcberpr\xfcft und aktualisiert werden, wenn sich die Komponenten absichtlich \xe4ndern. Wenn ein Snapshot-Test fehlschl\xe4gt, gibt es zwei M\xf6glichkeiten:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Die \xc4nderung ist unbeabsichtigt"}),": In diesem Fall sollte der Code \xfcberpr\xfcft und korrigiert werden."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Die \xc4nderung ist beabsichtigt"}),": In diesem Fall sollten die Snapshots aktualisiert werden."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"integration-in-cicd",children:"Integration in CI/CD"}),"\n",(0,i.jsx)(n.p,{children:"Die Snapshot-Tests sind in die CI/CD-Pipeline integriert und werden bei jedem Pull Request ausgef\xfchrt. Wenn ein Snapshot-Test fehlschl\xe4gt, wird der Pull Request blockiert, bis das Problem behoben ist."}),"\n",(0,i.jsx)(n.h2,{id:"n\xe4chste-schritte",children:"N\xe4chste Schritte"}),"\n",(0,i.jsx)(n.p,{children:"Die folgenden Schritte sind als N\xe4chstes geplant:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implementierung von Snapshot-Tests f\xfcr weitere Komponenten"}),": Checkbox, Radio, Select, TabView, etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration mit Chromatic"}),": F\xfcr visuelle Regressionstests mit Storybook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatisierte Snapshot-Updates"}),": Bei absichtlichen \xc4nderungen"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"fazit",children:"Fazit"}),"\n",(0,i.jsx)(n.p,{children:"Die implementierten Snapshot-Tests bieten eine solide Grundlage f\xfcr die Qualit\xe4tssicherung der Smolitux UI-Bibliothek. Sie stellen sicher, dass die Komponenten konsistent bleiben und keine unbeabsichtigten \xc4nderungen auftreten."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);