"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3399],{8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var i=r(6540);const l={},t=i.createContext(l);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},8725:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"accessibility/components/colorpicker","title":"ColorPicker Barrierefreiheit","description":"Implementierte Verbesserungen","source":"@site/wiki/accessibility/components/colorpicker.md","sourceDirName":"accessibility/components","slug":"/accessibility/components/colorpicker","permalink":"/smolitux-ui/wiki/accessibility/components/colorpicker","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/accessibility/components/colorpicker.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"ChartLegend Barrierefreiheit","permalink":"/smolitux-ui/wiki/accessibility/components/chartlegend"},"next":{"title":"Drawer Barrierefreiheit","permalink":"/smolitux-ui/wiki/accessibility/components/drawer"}}');var l=r(4848),t=r(8453);const a={},s="ColorPicker Barrierefreiheit",d={},o=[{value:"Implementierte Verbesserungen",id:"implementierte-verbesserungen",level:2},{value:"ARIA-Attribute",id:"aria-attribute",level:3},{value:"Tastaturnavigation",id:"tastaturnavigation",level:3},{value:"Fokus-Management",id:"fokus-management",level:3},{value:"Screenreader-Unterst\xfctzung",id:"screenreader-unterst\xfctzung",level:3},{value:"Beispiel-Implementierung",id:"beispiel-implementierung",level:2},{value:"Barrierefreiheitstests",id:"barrierefreiheitstests",level:2},{value:"Bekannte Einschr\xe4nkungen",id:"bekannte-einschr\xe4nkungen",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"colorpicker-barrierefreiheit",children:"ColorPicker Barrierefreiheit"})}),"\n",(0,l.jsx)(n.h2,{id:"implementierte-verbesserungen",children:"Implementierte Verbesserungen"}),"\n",(0,l.jsx)(n.p,{children:"Die ColorPicker-Komponente wurde mit folgenden Barrierefreiheitsverbesserungen aktualisiert:"}),"\n",(0,l.jsx)(n.h3,{id:"aria-attribute",children:"ARIA-Attribute"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'aria-haspopup="dialog"'})," - Zeigt an, dass der Button ein Dialog-Popup \xf6ffnet"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aria-expanded"})," - Zeigt an, ob der Farbw\xe4hler ge\xf6ffnet ist"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aria-labelledby"})," - Verkn\xfcpft das Label mit dem ColorPicker"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aria-describedby"})," - Verkn\xfcpft Beschreibungen, Hilfetexte und Fehlermeldungen"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aria-invalid"})," - Zeigt an, ob der Wert ung\xfcltig ist"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aria-required"})," - Zeigt an, ob das Feld erforderlich ist"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"F\xfcr den Dialog:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'role="dialog"'})," - Definiert das Popup als Dialog"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'aria-modal="true"'})," - Zeigt an, dass der Dialog modal ist"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aria-label"})," - Bietet eine beschreibende Bezeichnung f\xfcr den Dialog"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"F\xfcr die Eingabefelder:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aria-valuemin"}),", ",(0,l.jsx)(n.code,{children:"aria-valuemax"}),", ",(0,l.jsx)(n.code,{children:"aria-valuenow"})," - F\xfcr den Alpha-Slider"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"aria-valuetext"})," - Beschreibender Text f\xfcr den aktuellen Wert des Sliders"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"tastaturnavigation",children:"Tastaturnavigation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Enter/Space zum \xd6ffnen des Farbw\xe4hlers"}),"\n",(0,l.jsx)(n.li,{children:"Tab-Navigation durch alle interaktiven Elemente"}),"\n",(0,l.jsx)(n.li,{children:"Escape zum Schlie\xdfen des Farbw\xe4hlers"}),"\n",(0,l.jsx)(n.li,{children:"Pfeiltasten f\xfcr die Farbauswahl"}),"\n",(0,l.jsx)(n.li,{children:"Enter/Space f\xfcr die Auswahl voreingestellter Farben"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fokus-management",children:"Fokus-Management"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Automatischer Fokus auf das Farbeingabefeld beim \xd6ffnen"}),"\n",(0,l.jsx)(n.li,{children:"R\xfcckgabe des Fokus zum Trigger-Button beim Schlie\xdfen"}),"\n",(0,l.jsx)(n.li,{children:"Sichtbare Fokus-Indikatoren f\xfcr alle interaktiven Elemente"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"screenreader-unterst\xfctzung",children:"Screenreader-Unterst\xfctzung"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Beschreibende Texte f\xfcr den aktuellen Farbwert"}),"\n",(0,l.jsx)(n.li,{children:"Hilfetexte f\xfcr die Bedienung der Farbauswahl"}),"\n",(0,l.jsxs)(n.li,{children:["Versteckte Hilfstexte mit ",(0,l.jsx)(n.code,{children:"sr-only"}),"-Klassen"]}),"\n",(0,l.jsx)(n.li,{children:"Ank\xfcndigungen von Fehlermeldungen"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"beispiel-implementierung",children:"Beispiel-Implementierung"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:'<button\n  ref={triggerRef}\n  id={uniqueId}\n  type="button"\n  onClick={togglePicker}\n  aria-haspopup="dialog"\n  aria-expanded={isOpen}\n  aria-labelledby={label ? labelId : undefined}\n  aria-describedby={\n    [\n      ariaDescription ? descriptionId : null,\n      error ? errorId : null,\n      helperText && !error ? helperId : null\n    ].filter(Boolean).join(\' \') || undefined\n  }\n  aria-invalid={error ? \'true\' : undefined}\n  aria-required={required ? \'true\' : undefined}\n>\n  <div className="flex items-center">\n    <div \n      className="color-preview"\n      style={{ backgroundColor: colorValueText }}\n      aria-hidden="true"\n    />\n    <span className="sr-only">\n      Aktuelle Farbe: {colorValueText}. Dr\xfccken Sie Enter, um den Farbw\xe4hler zu \xf6ffnen.\n    </span>\n  </div>\n</button>\n\n{isOpen && (\n  <div\n    ref={popoverRef}\n    role="dialog"\n    aria-modal="true"\n    aria-label="Farbw\xe4hler"\n  >\n    <div>\n      <label htmlFor={colorInputId}>Farbe</label>\n      <input\n        ref={colorInputRef}\n        id={colorInputId}\n        type="color"\n        value={color}\n        onChange={(e) => updateColor(e.target.value)}\n        aria-describedby={`${uniqueId}-color-description`}\n      />\n      <p id={`${uniqueId}-color-description`} className="sr-only">\n        Verwenden Sie die Pfeiltasten, um die Farbe anzupassen.\n      </p>\n    </div>\n    \n    {allowAlpha && (\n      <div>\n        <label htmlFor={alphaInputId}>\n          Transparenz: {Math.round(alpha * 100)}%\n        </label>\n        <input\n          id={alphaInputId}\n          type="range"\n          min="0"\n          max="1"\n          step="0.01"\n          value={alpha}\n          onChange={(e) => updateAlpha(parseFloat(e.target.value))}\n          aria-valuemin={0}\n          aria-valuemax={1}\n          aria-valuenow={alpha}\n          aria-valuetext={`${Math.round(alpha * 100)}% Transparenz`}\n        />\n      </div>\n    )}\n    \n    <button\n      type="button"\n      onClick={closeDialog}\n      aria-label="Farbw\xe4hler schlie\xdfen"\n    >\n      Schlie\xdfen\n    </button>\n  </div>\n)}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"barrierefreiheitstests",children:"Barrierefreiheitstests"}),"\n",(0,l.jsx)(n.p,{children:"Die ColorPicker-Komponente wurde mit folgenden Tests auf Barrierefreiheit gepr\xfcft:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Automatisierte Tests"})," mit jest-axe zur \xdcberpr\xfcfung der ARIA-Attribute"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Tastaturnavigation"})," zur Sicherstellung der vollst\xe4ndigen Bedienbarkeit ohne Maus"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Screenreader-Tests"})," zur \xdcberpr\xfcfung der korrekten Ank\xfcndigungen"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Fokus-Management-Tests"})," zur Sicherstellung der korrekten Fokusreihenfolge"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"bekannte-einschr\xe4nkungen",children:"Bekannte Einschr\xe4nkungen"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Die native Farbauswahl (",(0,l.jsx)(n.code,{children:'<input type="color">'}),") hat je nach Browser unterschiedliche Barrierefreiheitsfunktionen"]}),"\n",(0,l.jsx)(n.li,{children:"Die Auswahl von Farben kann f\xfcr Benutzer mit Sehbehinderungen schwierig sein, daher sollten voreingestellte Farben mit beschreibenden Namen angeboten werden"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);