"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7626],{6839:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"components/feedback/toast","title":"Toast","description":"Die Toast-Komponente zeigt kurze Benachrichtigungen an, die automatisch nach einer bestimmten Zeit verschwinden.","source":"@site/docs/components/feedback/toast.md","sourceDirName":"components/feedback","slug":"/components/feedback/toast","permalink":"/smolitux-ui/docs/components/feedback/toast","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/docs/components/feedback/toast.md","tags":[],"version":"current","frontMatter":{},"sidebar":"wikiSidebar","previous":{"title":"Spinner","permalink":"/smolitux-ui/docs/components/feedback/spinner"},"next":{"title":"Toast-Komponente: Barrierefreiheit","permalink":"/smolitux-ui/docs/components/feedback/toast/accessibility"}}');var i=t(4848),o=t(8453);const r={},a="Toast",d={},l=[{value:"Import",id:"import",level:2},{value:"Verwendung",id:"verwendung",level:2},{value:"Toast-Provider einrichten",id:"toast-provider-einrichten",level:3},{value:"Toasts mit dem useToast-Hook anzeigen",id:"toasts-mit-dem-usetoast-hook-anzeigen",level:3},{value:"Toasts mit Titel",id:"toasts-mit-titel",level:3},{value:"Toasts mit benutzerdefinierter Dauer",id:"toasts-mit-benutzerdefinierter-dauer",level:3},{value:"Toasts mit Aktionen",id:"toasts-mit-aktionen",level:3},{value:"Toasts mit benutzerdefinierten Icons",id:"toasts-mit-benutzerdefinierten-icons",level:3},{value:"Toasts mit verschiedenen Positionen",id:"toasts-mit-verschiedenen-positionen",level:3},{value:"Toasts ohne Icon oder Schlie\xdfen-Button",id:"toasts-ohne-icon-oder-schlie\xdfen-button",level:3},{value:"Toasts programmatisch schlie\xdfen",id:"toasts-programmatisch-schlie\xdfen",level:3},{value:"Standalone Toast-Komponente",id:"standalone-toast-komponente",level:3},{value:"Props",id:"props",level:2},{value:"Toast Props",id:"toast-props",level:3},{value:"ToastProvider Props",id:"toastprovider-props",level:3},{value:"useToast Hook",id:"usetoast-hook",level:3},{value:"Barrierefreiheit",id:"barrierefreiheit",level:2},{value:"Beispiele",id:"beispiele",level:2},{value:"Formular mit Toast-Feedback",id:"formular-mit-toast-feedback",level:3},{value:"Datei-Upload mit Toast-Fortschritt",id:"datei-upload-mit-toast-fortschritt",level:3},{value:"Benachrichtigungssystem",id:"benachrichtigungssystem",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"toast",children:"Toast"})}),"\n",(0,i.jsx)(n.p,{children:"Die Toast-Komponente zeigt kurze Benachrichtigungen an, die automatisch nach einer bestimmten Zeit verschwinden."}),"\n",(0,i.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Toast, ToastProvider, useToast } from '@smolitux/core';\n"})}),"\n",(0,i.jsx)(n.h2,{id:"verwendung",children:"Verwendung"}),"\n",(0,i.jsx)(n.h3,{id:"toast-provider-einrichten",children:"Toast-Provider einrichten"}),"\n",(0,i.jsxs)(n.p,{children:["Um Toasts in Ihrer Anwendung zu verwenden, m\xfcssen Sie zun\xe4chst den ",(0,i.jsx)(n.code,{children:"ToastProvider"})," an einer hohen Stelle in Ihrer Komponentenhierarchie einbinden:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { ToastProvider } from '@smolitux/core';\n\nfunction App() {\n  return (\n    <ToastProvider>\n      {/* Ihre Anwendung hier */}\n    </ToastProvider>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"toasts-mit-dem-usetoast-hook-anzeigen",children:"Toasts mit dem useToast-Hook anzeigen"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function ToastExample() {\n  const toast = useToast();\n  \n  const showSuccessToast = () => {\n    toast.success(\'Die Aktion wurde erfolgreich durchgef\xfchrt.\');\n  };\n  \n  const showErrorToast = () => {\n    toast.error(\'Ein Fehler ist aufgetreten.\');\n  };\n  \n  const showWarningToast = () => {\n    toast.warning(\'Bitte beachten Sie die Hinweise.\');\n  };\n  \n  const showInfoToast = () => {\n    toast.info(\'Hier sind einige Informationen f\xfcr Sie.\');\n  };\n  \n  return (\n    <div className="space-x-2">\n      <button \n        className="px-4 py-2 bg-green-600 text-white rounded"\n        onClick={showSuccessToast}\n      >\n        Erfolg\n      </button>\n      \n      <button \n        className="px-4 py-2 bg-red-600 text-white rounded"\n        onClick={showErrorToast}\n      >\n        Fehler\n      </button>\n      \n      <button \n        className="px-4 py-2 bg-yellow-600 text-white rounded"\n        onClick={showWarningToast}\n      >\n        Warnung\n      </button>\n      \n      <button \n        className="px-4 py-2 bg-blue-600 text-white rounded"\n        onClick={showInfoToast}\n      >\n        Info\n      </button>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"toasts-mit-titel",children:"Toasts mit Titel"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function ToastWithTitleExample() {\n  const toast = useToast();\n  \n  const showToastWithTitle = () => {\n    toast.success({\n      title: 'Erfolgreich gespeichert',\n      message: 'Ihre \xc4nderungen wurden erfolgreich gespeichert.'\n    });\n  };\n  \n  return (\n    <button \n      className=\"px-4 py-2 bg-primary-600 text-white rounded\"\n      onClick={showToastWithTitle}\n    >\n      Toast mit Titel anzeigen\n    </button>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"toasts-mit-benutzerdefinierter-dauer",children:"Toasts mit benutzerdefinierter Dauer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function ToastWithCustomDurationExample() {\n  const toast = useToast();\n  \n  const showShortToast = () => {\n    toast.info({\n      message: \'Dieser Toast verschwindet nach 2 Sekunden.\',\n      duration: 2000\n    });\n  };\n  \n  const showLongToast = () => {\n    toast.info({\n      message: \'Dieser Toast bleibt 10 Sekunden sichtbar.\',\n      duration: 10000\n    });\n  };\n  \n  const showPersistentToast = () => {\n    toast.warning({\n      message: \'Dieser Toast bleibt sichtbar, bis er geschlossen wird.\',\n      duration: 0\n    });\n  };\n  \n  return (\n    <div className="space-x-2">\n      <button \n        className="px-4 py-2 bg-gray-600 text-white rounded"\n        onClick={showShortToast}\n      >\n        Kurzer Toast (2s)\n      </button>\n      \n      <button \n        className="px-4 py-2 bg-gray-600 text-white rounded"\n        onClick={showLongToast}\n      >\n        Langer Toast (10s)\n      </button>\n      \n      <button \n        className="px-4 py-2 bg-gray-600 text-white rounded"\n        onClick={showPersistentToast}\n      >\n        Persistenter Toast\n      </button>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"toasts-mit-aktionen",children:"Toasts mit Aktionen"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function ToastWithActionsExample() {\n  const toast = useToast();\n  \n  const showToastWithAction = () => {\n    toast.info({\n      title: 'Datei gel\xf6scht',\n      message: 'Die Datei wurde in den Papierkorb verschoben.',\n      actions: (\n        <button \n          className=\"text-primary-600 hover:text-primary-800 font-medium\"\n          onClick={() => console.log('R\xfcckg\xe4ngig gemacht')}\n        >\n          R\xfcckg\xe4ngig machen\n        </button>\n      )\n    });\n  };\n  \n  return (\n    <button \n      className=\"px-4 py-2 bg-primary-600 text-white rounded\"\n      onClick={showToastWithAction}\n    >\n      Toast mit Aktion anzeigen\n    </button>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"toasts-mit-benutzerdefinierten-icons",children:"Toasts mit benutzerdefinierten Icons"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function ToastWithCustomIconExample() {\n  const toast = useToast();\n  \n  const showToastWithCustomIcon = () => {\n    toast.info({\n      title: 'Synchronisierung',\n      message: 'Ihre Daten werden synchronisiert...',\n      icon: <SyncIcon className=\"w-6 h-6 animate-spin\" />\n    });\n  };\n  \n  return (\n    <button \n      className=\"px-4 py-2 bg-primary-600 text-white rounded\"\n      onClick={showToastWithCustomIcon}\n    >\n      Toast mit benutzerdefiniertem Icon\n    </button>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"toasts-mit-verschiedenen-positionen",children:"Toasts mit verschiedenen Positionen"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function ToastPositionsExample() {\n  const toast = useToast();\n  \n  const positions = [\n    'top-right',\n    'top-left',\n    'bottom-right',\n    'bottom-left',\n    'top-center',\n    'bottom-center'\n  ];\n  \n  const showToastAtPosition = (position) => {\n    toast.info({\n      message: `Toast an Position: ${position}`,\n      position\n    });\n  };\n  \n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {positions.map(position => (\n        <button \n          key={position}\n          className=\"px-4 py-2 bg-gray-600 text-white rounded\"\n          onClick={() => showToastAtPosition(position)}\n        >\n          {position}\n        </button>\n      ))}\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"toasts-ohne-icon-oder-schlie\xdfen-button",children:"Toasts ohne Icon oder Schlie\xdfen-Button"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function ToastCustomizationExample() {\n  const toast = useToast();\n  \n  const showToastWithoutIcon = () => {\n    toast.success({\n      message: \'Toast ohne Icon\',\n      showIcon: false\n    });\n  };\n  \n  const showToastWithoutCloseButton = () => {\n    toast.success({\n      message: \'Toast ohne Schlie\xdfen-Button\',\n      showCloseButton: false\n    });\n  };\n  \n  return (\n    <div className="space-x-2">\n      <button \n        className="px-4 py-2 bg-primary-600 text-white rounded"\n        onClick={showToastWithoutIcon}\n      >\n        Ohne Icon\n      </button>\n      \n      <button \n        className="px-4 py-2 bg-primary-600 text-white rounded"\n        onClick={showToastWithoutCloseButton}\n      >\n        Ohne Schlie\xdfen-Button\n      </button>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"toasts-programmatisch-schlie\xdfen",children:"Toasts programmatisch schlie\xdfen"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function ProgrammaticToastExample() {\n  const toast = useToast();\n  \n  const showAndCloseToast = () => {\n    const id = toast.info({\n      title: 'Verarbeitung',\n      message: 'Daten werden verarbeitet...',\n      duration: 0\n    });\n    \n    // Toast nach 3 Sekunden schlie\xdfen\n    setTimeout(() => {\n      toast.remove(id);\n      \n      // Neuen Toast anzeigen\n      toast.success('Verarbeitung abgeschlossen!');\n    }, 3000);\n  };\n  \n  return (\n    <button \n      className=\"px-4 py-2 bg-primary-600 text-white rounded\"\n      onClick={showAndCloseToast}\n    >\n      Verarbeitung starten\n    </button>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"standalone-toast-komponente",children:"Standalone Toast-Komponente"}),"\n",(0,i.jsx)(n.p,{children:"Sie k\xf6nnen die Toast-Komponente auch direkt verwenden, ohne den ToastProvider:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function StandaloneToastExample() {\n  const [isOpen, setIsOpen] = useState(false);\n  \n  const showToast = () => {\n    setIsOpen(true);\n  };\n  \n  const closeToast = () => {\n    setIsOpen(false);\n  };\n  \n  return (\n    <div>\n      <button \n        className="px-4 py-2 bg-primary-600 text-white rounded"\n        onClick={showToast}\n      >\n        Toast anzeigen\n      </button>\n      \n      <Toast\n        type="success"\n        title="Erfolg!"\n        message="Die Aktion wurde erfolgreich durchgef\xfchrt."\n        isOpen={isOpen}\n        onClose={closeToast}\n        duration={3000}\n      />\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsx)(n.h3,{id:"toast-props",children:"Toast Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Typ"}),(0,i.jsx)(n.th,{children:"Standard"}),(0,i.jsx)(n.th,{children:"Beschreibung"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"title"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Titel des Toasts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"message"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Nachrichtentext"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"type"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'success' | 'error' | 'warning' | 'info'"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'info'"})}),(0,i.jsx)(n.td,{children:"Typ des Toasts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"duration"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"5000"})}),(0,i.jsx)(n.td,{children:"Anzeigedauer in Millisekunden (0 f\xfcr kein automatisches Schlie\xdfen)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onClose"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"() => void"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Callback zum Schlie\xdfen des Toasts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isOpen"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Ist der Toast gerade offen?"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"position"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'top-right' | 'top-left' | 'bottom-right' | 'bottom-left' | 'top-center' | 'bottom-center'"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'top-right'"})}),(0,i.jsx)(n.td,{children:"Position des Toasts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showIcon"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Icon anzeigen"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showCloseButton"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Schlie\xdfen-Button anzeigen"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"animateOut"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Animation beim Schlie\xdfen"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"icon"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ReactNode"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Benutzerdefiniertes Icon"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"actions"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ReactNode"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Aktionen am Toast (z.B. Buttons)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"className"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Zus\xe4tzliche CSS-Klassen"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data-testid"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'toast'"})}),(0,i.jsx)(n.td,{children:"Test-ID f\xfcr automatisierte Tests"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"toastprovider-props",children:"ToastProvider Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Typ"}),(0,i.jsx)(n.th,{children:"Standard"}),(0,i.jsx)(n.th,{children:"Beschreibung"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"limit"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"5"})}),(0,i.jsx)(n.td,{children:"Limit f\xfcr gleichzeitig angezeigte Toasts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"position"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'top-right' | 'top-left' | 'bottom-right' | 'bottom-left' | 'top-center' | 'bottom-center'"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'top-right'"})}),(0,i.jsx)(n.td,{children:"Position aller Toasts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"children"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ReactNode"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Kinder-Elemente"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data-testid"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'toast-provider'"})}),(0,i.jsx)(n.td,{children:"Test-ID f\xfcr automatisierte Tests"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"usetoast-hook",children:"useToast Hook"}),"\n",(0,i.jsxs)(n.p,{children:["Der ",(0,i.jsx)(n.code,{children:"useToast"})," Hook gibt ein Objekt mit folgenden Methoden zur\xfcck:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Methode"}),(0,i.jsx)(n.th,{children:"Beschreibung"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"success(message: string | ToastOptions)"})}),(0,i.jsx)(n.td,{children:"Zeigt einen Erfolgs-Toast an"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"error(message: string | ToastOptions)"})}),(0,i.jsx)(n.td,{children:"Zeigt einen Fehler-Toast an"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"warning(message: string | ToastOptions)"})}),(0,i.jsx)(n.td,{children:"Zeigt einen Warnungs-Toast an"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"info(message: string | ToastOptions)"})}),(0,i.jsx)(n.td,{children:"Zeigt einen Info-Toast an"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"show(options: ToastOptions)"})}),(0,i.jsx)(n.td,{children:"Zeigt einen benutzerdefinierten Toast an"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"close(id: string)"})}),(0,i.jsx)(n.td,{children:"Entfernt einen Toast anhand seiner ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"closeAll()"})}),(0,i.jsx)(n.td,{children:"Entfernt alle Toasts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"toasts"})}),(0,i.jsx)(n.td,{children:"Array mit allen aktuell angezeigten Toasts"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"barrierefreiheit",children:"Barrierefreiheit"}),"\n",(0,i.jsx)(n.p,{children:"Die Toast-Komponente ist f\xfcr Barrierefreiheit optimiert:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Verwendet ARIA-Attribute f\xfcr bessere Screenreader-Unterst\xfctzung:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'role="alert"'})," f\xfcr die Ank\xfcndigung neuer Toasts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'aria-live="polite"'})," oder ",(0,i.jsx)(n.code,{children:'aria-live="assertive"'})," je nach Toast-Typ"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'aria-atomic="true"'})," damit der gesamte Inhalt als eine Einheit gelesen wird"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"aria-labelledby"})," und ",(0,i.jsx)(n.code,{children:"aria-describedby"})," f\xfcr die Verkn\xfcpfung von Titel und Nachricht"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Eindeutige IDs f\xfcr alle Elemente durch Verwendung von ",(0,i.jsx)(n.code,{children:"useId()"})]}),"\n",(0,i.jsxs)(n.li,{children:["Fortschrittsbalken mit ",(0,i.jsx)(n.code,{children:'role="progressbar"'})," und entsprechenden ARIA-Attributen"]}),"\n",(0,i.jsx)(n.li,{children:"Toasts k\xf6nnen mit der Tastatur geschlossen werden (Enter oder Space auf dem Schlie\xdfen-Button)"}),"\n",(0,i.jsx)(n.li,{children:"Farbkontraste erf\xfcllen die WCAG-Richtlinien (AA-Standard)"}),"\n",(0,i.jsx)(n.li,{children:"Toasts werden automatisch nach einer bestimmten Zeit geschlossen, k\xf6nnen aber auch manuell geschlossen werden"}),"\n",(0,i.jsxs)(n.li,{children:["Icons sind mit ",(0,i.jsx)(n.code,{children:'aria-hidden="true"'})," f\xfcr Screenreader ausgeblendet, wenn sie nur dekorativ sind"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"beispiele",children:"Beispiele"}),"\n",(0,i.jsx)(n.h3,{id:"formular-mit-toast-feedback",children:"Formular mit Toast-Feedback"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function FormWithToastFeedback() {\n  const toast = useToast();\n  const [formData, setFormData] = useState({\n    name: \'\',\n    email: \'\',\n    message: \'\'\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Einfache Validierung\n    if (!formData.name || !formData.email || !formData.message) {\n      toast.error(\'Bitte f\xfcllen Sie alle Felder aus.\');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    // Simuliere API-Aufruf\n    try {\n      // Simuliere Netzwerkverz\xf6gerung\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // Simuliere zuf\xe4lligen Erfolg/Fehler\n      const isSuccess = Math.random() > 0.3;\n      \n      if (isSuccess) {\n        toast.success({\n          title: \'Nachricht gesendet\',\n          message: \'Vielen Dank f\xfcr Ihre Nachricht. Wir werden uns in K\xfcrze bei Ihnen melden.\'\n        });\n        \n        // Formular zur\xfccksetzen\n        setFormData({\n          name: \'\',\n          email: \'\',\n          message: \'\'\n        });\n      } else {\n        throw new Error(\'Netzwerkfehler\');\n      }\n    } catch (error) {\n      toast.error({\n        title: \'Fehler beim Senden\',\n        message: \'Es gab ein Problem beim Senden Ihrer Nachricht. Bitte versuchen Sie es sp\xe4ter erneut.\'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <div className="max-w-md mx-auto p-6 bg-white rounded-lg shadow-md">\n      <h2 className="text-xl font-bold mb-4">Kontaktformular</h2>\n      \n      <form onSubmit={handleSubmit} className="space-y-4">\n        <div>\n          <label className="block text-sm font-medium text-gray-700 mb-1">\n            Name\n          </label>\n          <input\n            type="text"\n            name="name"\n            value={formData.name}\n            onChange={handleChange}\n            className="w-full px-3 py-2 border border-gray-300 rounded-md"\n          />\n        </div>\n        \n        <div>\n          <label className="block text-sm font-medium text-gray-700 mb-1">\n            E-Mail\n          </label>\n          <input\n            type="email"\n            name="email"\n            value={formData.email}\n            onChange={handleChange}\n            className="w-full px-3 py-2 border border-gray-300 rounded-md"\n          />\n        </div>\n        \n        <div>\n          <label className="block text-sm font-medium text-gray-700 mb-1">\n            Nachricht\n          </label>\n          <textarea\n            name="message"\n            value={formData.message}\n            onChange={handleChange}\n            rows={4}\n            className="w-full px-3 py-2 border border-gray-300 rounded-md"\n          />\n        </div>\n        \n        <button\n          type="submit"\n          className="w-full py-2 px-4 bg-primary-600 text-white rounded-md hover:bg-primary-700 disabled:bg-gray-400"\n          disabled={isSubmitting}\n        >\n          {isSubmitting ? \'Wird gesendet...\' : \'Nachricht senden\'}\n        </button>\n      </form>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"datei-upload-mit-toast-fortschritt",children:"Datei-Upload mit Toast-Fortschritt"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'function FileUploadWithToast() {\n  const toast = useToast();\n  const [file, setFile] = useState(null);\n  \n  const handleFileChange = (e) => {\n    if (e.target.files.length > 0) {\n      setFile(e.target.files[0]);\n    }\n  };\n  \n  const handleUpload = () => {\n    if (!file) {\n      toast.warning(\'Bitte w\xe4hlen Sie zuerst eine Datei aus.\');\n      return;\n    }\n    \n    // Toast f\xfcr Upload-Start anzeigen\n    const toastId = toast.info({\n      title: \'Upload gestartet\',\n      message: `Datei "${file.name}" wird hochgeladen...`,\n      duration: 0\n    });\n    \n    // Simuliere Upload-Fortschritt\n    let progress = 0;\n    const interval = setInterval(() => {\n      progress += 10;\n      \n      if (progress <= 100) {\n        // Toast aktualisieren (in einer echten Anwendung w\xfcrde man hier den Toast-Inhalt aktualisieren)\n        toast.remove(toastId);\n        toast.info({\n          id: toastId,\n          title: \'Upload l\xe4uft\',\n          message: `Datei "${file.name}" wird hochgeladen... ${progress}%`,\n          duration: 0\n        });\n      } else {\n        clearInterval(interval);\n        \n        // Upload abgeschlossen\n        toast.remove(toastId);\n        toast.success({\n          title: \'Upload abgeschlossen\',\n          message: `Datei "${file.name}" wurde erfolgreich hochgeladen.`\n        });\n        \n        // Datei zur\xfccksetzen\n        setFile(null);\n      }\n    }, 500);\n  };\n  \n  return (\n    <div className="max-w-md mx-auto p-6 bg-white rounded-lg shadow-md">\n      <h2 className="text-xl font-bold mb-4">Datei hochladen</h2>\n      \n      <div className="mb-4">\n        <input\n          type="file"\n          onChange={handleFileChange}\n          className="block w-full text-sm text-gray-500\n            file:mr-4 file:py-2 file:px-4\n            file:rounded-md file:border-0\n            file:text-sm file:font-semibold\n            file:bg-primary-50 file:text-primary-700\n            hover:file:bg-primary-100"\n        />\n      </div>\n      \n      {file && (\n        <div className="mb-4 p-3 bg-gray-50 rounded-md">\n          <p className="text-sm">\n            <span className="font-medium">Ausgew\xe4hlte Datei:</span> {file.name}\n          </p>\n          <p className="text-xs text-gray-500">\n            {(file.size / 1024).toFixed(2)} KB\n          </p>\n        </div>\n      )}\n      \n      <button\n        onClick={handleUpload}\n        disabled={!file}\n        className="w-full py-2 px-4 bg-primary-600 text-white rounded-md hover:bg-primary-700 disabled:bg-gray-400"\n      >\n        Datei hochladen\n      </button>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"benachrichtigungssystem",children:"Benachrichtigungssystem"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function NotificationSystem() {\n  const toast = useToast();\n  \n  // Simuliere eingehende Benachrichtigungen\n  useEffect(() => {\n    const notifications = [\n      {\n        type: 'info',\n        title: 'Neue Nachricht',\n        message: 'Sie haben eine neue Nachricht von Max Mustermann erhalten.',\n        delay: 2000\n      },\n      {\n        type: 'success',\n        title: 'Bestellung versandt',\n        message: 'Ihre Bestellung #12345 wurde versandt und wird in K\xfcrze geliefert.',\n        delay: 5000\n      },\n      {\n        type: 'warning',\n        title: 'Speicherplatz fast voll',\n        message: 'Ihr Speicherplatz ist zu 90% belegt. Bitte l\xf6schen Sie nicht ben\xf6tigte Dateien.',\n        delay: 8000\n      }\n    ];\n    \n    // Zeige Benachrichtigungen mit Verz\xf6gerung an\n    notifications.forEach(notification => {\n      const timer = setTimeout(() => {\n        toast[notification.type]({\n          title: notification.title,\n          message: notification.message,\n          actions: (\n            <button \n              className=\"text-primary-600 hover:text-primary-800 font-medium\"\n              onClick={() => console.log(`Aktion f\xfcr: ${notification.title}`)}\n            >\n              Anzeigen\n            </button>\n          )\n        });\n      }, notification.delay);\n      \n      return () => clearTimeout(timer);\n    });\n  }, [toast]);\n  \n  // Manuell Benachrichtigungen ausl\xf6sen\n  const triggerNotification = (type) => {\n    const notifications = {\n      message: {\n        type: 'info',\n        title: 'Neue Nachricht',\n        message: 'Sie haben eine neue Nachricht erhalten.'\n      },\n      order: {\n        type: 'success',\n        title: 'Bestellung best\xe4tigt',\n        message: 'Ihre Bestellung wurde erfolgreich best\xe4tigt.'\n      },\n      alert: {\n        type: 'warning',\n        title: 'Sicherheitswarnung',\n        message: 'Ungew\xf6hnliche Anmeldeaktivit\xe4t festgestellt.'\n      },\n      error: {\n        type: 'error',\n        title: 'Fehler aufgetreten',\n        message: 'Bei der Verarbeitung ist ein Fehler aufgetreten.'\n      }\n    };\n    \n    const notification = notifications[type];\n    toast[notification.type]({\n      title: notification.title,\n      message: notification.message,\n      actions: (\n        <button \n          className=\"text-primary-600 hover:text-primary-800 font-medium\"\n          onClick={() => console.log(`Aktion f\xfcr: ${notification.title}`)}\n        >\n          Anzeigen\n        </button>\n      )\n    });\n  };\n  \n  return (\n    <div className=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-bold mb-4\">Benachrichtigungssystem</h2>\n      <p className=\"text-gray-600 mb-4\">\n        Klicken Sie auf die Buttons, um verschiedene Benachrichtigungen auszul\xf6sen.\n      </p>\n      \n      <div className=\"grid grid-cols-2 gap-2\">\n        <button \n          className=\"py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          onClick={() => triggerNotification('message')}\n        >\n          Neue Nachricht\n        </button>\n        \n        <button \n          className=\"py-2 px-4 bg-green-600 text-white rounded-md hover:bg-green-700\"\n          onClick={() => triggerNotification('order')}\n        >\n          Bestellung\n        </button>\n        \n        <button \n          className=\"py-2 px-4 bg-yellow-600 text-white rounded-md hover:bg-yellow-700\"\n          onClick={() => triggerNotification('alert')}\n        >\n          Warnung\n        </button>\n        \n        <button \n          className=\"py-2 px-4 bg-red-600 text-white rounded-md hover:bg-red-700\"\n          onClick={() => triggerNotification('error')}\n        >\n          Fehler\n        </button>\n      </div>\n      \n      <div className=\"mt-4\">\n        <button \n          className=\"w-full py-2 px-4 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n          onClick={() => toast.removeAll()}\n        >\n          Alle Benachrichtigungen schlie\xdfen\n        </button>\n      </div>\n    </div>\n  );\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);