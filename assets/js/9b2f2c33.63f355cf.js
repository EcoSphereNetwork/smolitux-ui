"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5253],{3334:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>u,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"guides/internationalization","title":"Internationalisierung (i18n)","description":"Die Smolitux UI Bibliothek bietet ein umfassendes Internationalisierungssystem, das die Erstellung mehrsprachiger Anwendungen erleichtert.","source":"@site/docs/guides/internationalization.md","sourceDirName":"guides","slug":"/guides/internationalization","permalink":"/smolitux-ui/docs/guides/internationalization","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/docs/guides/internationalization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"wikiSidebar","previous":{"title":"Formularvalidierung","permalink":"/smolitux-ui/docs/guides/form-validation"},"next":{"title":"Migrationsstrategie f\xfcr bestehende Projekte","permalink":"/smolitux-ui/docs/guides/migration-guide"}}');var t=r(4848),s=r(8453);const a={},u="Internationalisierung (i18n)",l={},o=[{value:"\xdcberblick",id:"\xfcberblick",level:2},{value:"Unterst\xfctzte Sprachen",id:"unterst\xfctzte-sprachen",level:2},{value:"Grundlegende Verwendung",id:"grundlegende-verwendung",level:2},{value:"Einrichtung des I18nProvider",id:"einrichtung-des-i18nprovider",level:3},{value:"Verwendung von \xdcbersetzungen",id:"verwendung-von-\xfcbersetzungen",level:3},{value:"Sprachumschaltung",id:"sprachumschaltung",level:3},{value:"Erweiterte Funktionen",id:"erweiterte-funktionen",level:2},{value:"Benutzerdefinierte \xdcbersetzungsressourcen",id:"benutzerdefinierte-\xfcbersetzungsressourcen",level:3},{value:"Zugriff auf i18n-Funktionen",id:"zugriff-auf-i18n-funktionen",level:3},{value:"Formatierung von Daten",id:"formatierung-von-daten",level:3},{value:"Pluralisierung",id:"pluralisierung",level:3},{value:"Integration mit Komponenten",id:"integration-mit-komponenten",level:2},{value:"Sprachspezifische Formatierung",id:"sprachspezifische-formatierung",level:2},{value:"Sprachdetektierung",id:"sprachdetektierung",level:2},{value:"Namespaces",id:"namespaces",level:2},{value:"Zusammenfassung",id:"zusammenfassung",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"internationalisierung-i18n",children:"Internationalisierung (i18n)"})}),"\n",(0,t.jsx)(e.p,{children:"Die Smolitux UI Bibliothek bietet ein umfassendes Internationalisierungssystem, das die Erstellung mehrsprachiger Anwendungen erleichtert."}),"\n",(0,t.jsx)(e.h2,{id:"\xfcberblick",children:"\xdcberblick"}),"\n",(0,t.jsx)(e.p,{children:"Das i18n-System besteht aus mehreren Komponenten:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"I18nProvider"}),": Ein Provider f\xfcr die \xdcbersetzungsressourcen und die aktuelle Sprache"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Hooks"}),": ",(0,t.jsx)(e.code,{children:"useTranslation"})," und ",(0,t.jsx)(e.code,{children:"useI18n"})," f\xfcr den Zugriff auf \xdcbersetzungen und i18n-Funktionen"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Komponenten"}),": ",(0,t.jsx)(e.code,{children:"LanguageSwitcher"})," f\xfcr die einfache Sprachumschaltung"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\xdcbersetzungsressourcen"}),": Vorgefertigte \xdcbersetzungen f\xfcr allgemeine Texte, Komponenten und Validierungsmeldungen"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"unterst\xfctzte-sprachen",children:"Unterst\xfctzte Sprachen"}),"\n",(0,t.jsx)(e.p,{children:"Das System unterst\xfctzt standardm\xe4\xdfig die folgenden Sprachen:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Deutsch (DE) - Standardsprache"}),"\n",(0,t.jsx)(e.li,{children:"Englisch (EN)"}),"\n",(0,t.jsx)(e.li,{children:"Franz\xf6sisch (FR)"}),"\n",(0,t.jsx)(e.li,{children:"Spanisch (ES)"}),"\n",(0,t.jsx)(e.li,{children:"Italienisch (IT)"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"grundlegende-verwendung",children:"Grundlegende Verwendung"}),"\n",(0,t.jsx)(e.h3,{id:"einrichtung-des-i18nprovider",children:"Einrichtung des I18nProvider"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { I18nProvider } from '@smolitux/core';\n\nfunction App() {\n  return (\n    <I18nProvider defaultLanguage=\"de\">\n      <YourApp />\n    </I18nProvider>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"verwendung-von-\xfcbersetzungen",children:"Verwendung von \xdcbersetzungen"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { useTranslation } from '@smolitux/core';\n\nfunction WelcomeMessage() {\n  const t = useTranslation();\n  \n  return (\n    <div>\n      <h1>{t('welcome.title')}</h1>\n      <p>{t('welcome.message', { name: 'Max' })}</p>\n    </div>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"sprachumschaltung",children:"Sprachumschaltung"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { LanguageSwitcher } from '@smolitux/core';\n\nfunction Header() {\n  return (\n    <header>\n      <nav>{/* ... */}</nav>\n      <LanguageSwitcher />\n    </header>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"erweiterte-funktionen",children:"Erweiterte Funktionen"}),"\n",(0,t.jsx)(e.h3,{id:"benutzerdefinierte-\xfcbersetzungsressourcen",children:"Benutzerdefinierte \xdcbersetzungsressourcen"}),"\n",(0,t.jsx)(e.p,{children:"Sie k\xf6nnen eigene \xdcbersetzungsressourcen hinzuf\xfcgen:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { I18nProvider } from '@smolitux/core';\n\nconst customResources = {\n  de: {\n    myApp: {\n      greeting: 'Hallo, {{name}}!',\n      farewell: 'Auf Wiedersehen, {{name}}!'\n    }\n  },\n  en: {\n    myApp: {\n      greeting: 'Hello, {{name}}!',\n      farewell: 'Goodbye, {{name}}!'\n    }\n  }\n};\n\nfunction App() {\n  return (\n    <I18nProvider \n      defaultLanguage=\"de\"\n      resources={customResources}\n    >\n      <YourApp />\n    </I18nProvider>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"zugriff-auf-i18n-funktionen",children:"Zugriff auf i18n-Funktionen"}),"\n",(0,t.jsxs)(e.p,{children:["Mit dem ",(0,t.jsx)(e.code,{children:"useI18n"})," Hook k\xf6nnen Sie auf alle i18n-Funktionen zugreifen:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { useI18n } from '@smolitux/core';\n\nfunction LanguageControls() {\n  const { \n    language,          // Aktuelle Sprache\n    changeLanguage,    // Funktion zum \xc4ndern der Sprache\n    t,                 // \xdcbersetzungsfunktion\n    availableLanguages // Liste der verf\xfcgbaren Sprachen\n  } = useI18n();\n  \n  return (\n    <div>\n      <p>{t('currentLanguage')}: {language}</p>\n      \n      <div>\n        {availableLanguages.map(lang => (\n          <button \n            key={lang}\n            onClick={() => changeLanguage(lang)}\n            disabled={lang === language}\n          >\n            {t(`languages.${lang}`)}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"formatierung-von-daten",children:"Formatierung von Daten"}),"\n",(0,t.jsx)(e.p,{children:"Das i18n-System unterst\xfctzt auch die Formatierung von Daten wie Zahlen, W\xe4hrungen und Datumsangaben:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { useI18n } from '@smolitux/core';\n\nfunction PriceDisplay({ price, date }) {\n  const { formatNumber, formatDate } = useI18n();\n  \n  return (\n    <div>\n      <p>Preis: {formatNumber(price, { style: 'currency', currency: 'EUR' })}</p>\n      <p>Datum: {formatDate(date, { dateStyle: 'full' })}</p>\n    </div>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"pluralisierung",children:"Pluralisierung"}),"\n",(0,t.jsx)(e.p,{children:"Das System unterst\xfctzt auch Pluralisierung:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { useTranslation } from '@smolitux/core';\n\nfunction ItemCount({ count }) {\n  const t = useTranslation();\n  \n  return (\n    <p>\n      {t('items.count', { count, defaultValue_plural: '{{count}} Artikel', defaultValue: '{{count}} Artikel' })}\n    </p>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"integration-mit-komponenten",children:"Integration mit Komponenten"}),"\n",(0,t.jsx)(e.p,{children:"Alle Smolitux UI Komponenten sind bereits f\xfcr die Internationalisierung vorbereitet:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { Button, Modal, useTranslation } from '@smolitux/core';\n\nfunction ConfirmDialog({ isOpen, onClose, onConfirm }) {\n  const t = useTranslation();\n  \n  return (\n    <Modal \n      isOpen={isOpen} \n      onClose={onClose}\n      title={t('confirm.title')}\n    >\n      <p>{t('confirm.message')}</p>\n      \n      <div>\n        <Button onClick={onClose}>\n          {t('common.cancel')}\n        </Button>\n        <Button onClick={onConfirm} variant=\"primary\">\n          {t('common.confirm')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"sprachspezifische-formatierung",children:"Sprachspezifische Formatierung"}),"\n",(0,t.jsx)(e.p,{children:"Das System ber\xfccksichtigt automatisch sprachspezifische Formatierungen:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { useI18n } from '@smolitux/core';\n\nfunction NumberFormatExample() {\n  const { formatNumber, language } = useI18n();\n  const number = 1234567.89;\n  \n  // Wird je nach Sprache unterschiedlich formatiert:\n  // DE: 1.234.567,89\n  // EN: 1,234,567.89\n  // FR: 1 234 567,89\n  return <p>{formatNumber(number)}</p>;\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"sprachdetektierung",children:"Sprachdetektierung"}),"\n",(0,t.jsx)(e.p,{children:"Das System kann die bevorzugte Sprache des Benutzers automatisch erkennen:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { I18nProvider } from '@smolitux/core';\n\nfunction App() {\n  return (\n    <I18nProvider \n      defaultLanguage=\"de\"\n      detectBrowserLanguage={true}\n    >\n      <YourApp />\n    </I18nProvider>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"namespaces",children:"Namespaces"}),"\n",(0,t.jsx)(e.p,{children:"Sie k\xf6nnen \xdcbersetzungen in Namespaces organisieren:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { useTranslation } from '@smolitux/core';\n\nfunction AdminPanel() {\n  // L\xe4dt \xdcbersetzungen aus dem 'admin' Namespace\n  const t = useTranslation('admin');\n  \n  return (\n    <div>\n      <h1>{t('title')}</h1>\n      <p>{t('description')}</p>\n    </div>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"zusammenfassung",children:"Zusammenfassung"}),"\n",(0,t.jsx)(e.p,{children:"Das Internationalisierungssystem der Smolitux UI Bibliothek bietet:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Einfache und flexible API f\xfcr mehrsprachige Anwendungen"}),"\n",(0,t.jsx)(e.li,{children:"Unterst\xfctzung f\xfcr mehrere Sprachen (DE, EN, FR, ES, IT)"}),"\n",(0,t.jsx)(e.li,{children:"Formatierung von Zahlen, W\xe4hrungen und Datumsangaben"}),"\n",(0,t.jsx)(e.li,{children:"Pluralisierung und Interpolation"}),"\n",(0,t.jsx)(e.li,{children:"Integration mit Smolitux UI Komponenten"}),"\n",(0,t.jsx)(e.li,{children:"Automatische Sprachdetektierung"}),"\n",(0,t.jsx)(e.li,{children:"Namespace-Unterst\xfctzung f\xfcr die Organisation von \xdcbersetzungen"}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>a,x:()=>u});var i=r(6540);const t={},s=i.createContext(t);function a(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function u(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);