"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3398],{6908:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"components/forms/form-control","title":"FormControl","description":"Die FormControl-Komponente dient als Container f\xfcr Formularelemente und bietet eine konsistente Struktur f\xfcr Labels, Hilfetexte und Fehlermeldungen. Sie stellt einen Context bereit, der von untergeordneten Komponenten wie Input, Select und Checkbox genutzt werden kann.","source":"@site/wiki/components/forms/form-control.md","sourceDirName":"components/forms","slug":"/components/forms/form-control","permalink":"/smolitux-ui/wiki/components/forms/form-control","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/smolitux-ui/tree/main/docs/wiki/wiki/components/forms/form-control.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guideSidebar","previous":{"title":"FileUpload","permalink":"/smolitux-ui/wiki/components/forms/fileupload"},"next":{"title":"Radio","permalink":"/smolitux-ui/wiki/components/forms/radio"}}');var d=n(4848),s=n(8453);const i={},o="FormControl",t={},a=[{value:"Import",id:"import",level:2},{value:"Verwendung",id:"verwendung",level:2},{value:"Einfaches Formularfeld",id:"einfaches-formularfeld",level:3},{value:"Formularfeld mit Fehlermeldung",id:"formularfeld-mit-fehlermeldung",level:3},{value:"Deaktiviertes Formularfeld",id:"deaktiviertes-formularfeld",level:3},{value:"Erforderliches Formularfeld",id:"erforderliches-formularfeld",level:3},{value:"Formularfeld mit verschiedenen Gr\xf6\xdfen",id:"formularfeld-mit-verschiedenen-gr\xf6\xdfen",level:3},{value:"Formularfeld mit verschiedenen Varianten",id:"formularfeld-mit-verschiedenen-varianten",level:3},{value:"Formularfeld mit verschiedenen Label-Positionen",id:"formularfeld-mit-verschiedenen-label-positionen",level:3},{value:"Formularfeld mit erfolgreichem Zustand",id:"formularfeld-mit-erfolgreichem-zustand",level:3},{value:"Props",id:"props",level:2},{value:"FormControl",id:"formcontrol-1",level:3},{value:"FormLabel",id:"formlabel",level:3},{value:"FormHelperText",id:"formhelpertext",level:3},{value:"FormErrorMessage",id:"formerrormessage",level:3},{value:"useFormControl Hook",id:"useformcontrol-hook",level:2},{value:"Barrierefreiheit",id:"barrierefreiheit",level:2},{value:"Beispiele",id:"beispiele",level:2},{value:"Formular mit Validierung",id:"formular-mit-validierung",level:3},{value:"Formularfeld mit benutzerdefiniertem Label",id:"formularfeld-mit-benutzerdefiniertem-label",level:3},{value:"Formularfeld mit Charakterz\xe4hler",id:"formularfeld-mit-charakterz\xe4hler",level:3}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.header,{children:(0,d.jsx)(r.h1,{id:"formcontrol",children:"FormControl"})}),"\n",(0,d.jsx)(r.p,{children:"Die FormControl-Komponente dient als Container f\xfcr Formularelemente und bietet eine konsistente Struktur f\xfcr Labels, Hilfetexte und Fehlermeldungen. Sie stellt einen Context bereit, der von untergeordneten Komponenten wie Input, Select und Checkbox genutzt werden kann."}),"\n",(0,d.jsx)(r.h2,{id:"import",children:"Import"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:"import { FormControl, FormLabel, FormHelperText, FormErrorMessage } from '@smolitux/core';\n"})}),"\n",(0,d.jsx)(r.h2,{id:"verwendung",children:"Verwendung"}),"\n",(0,d.jsx)(r.h3,{id:"einfaches-formularfeld",children:"Einfaches Formularfeld"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl>\n  <FormLabel>Name</FormLabel>\n  <Input placeholder="Geben Sie Ihren Namen ein" />\n  <FormHelperText>Bitte geben Sie Ihren vollst\xe4ndigen Namen ein.</FormHelperText>\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h3,{id:"formularfeld-mit-fehlermeldung",children:"Formularfeld mit Fehlermeldung"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl isInvalid={!!errors.email}>\n  <FormLabel>E-Mail</FormLabel>\n  <Input \n    type="email" \n    placeholder="name@beispiel.de" \n    value={email}\n    onChange={(e) => setEmail(e.target.value)}\n  />\n  {errors.email ? (\n    <FormErrorMessage>{errors.email}</FormErrorMessage>\n  ) : (\n    <FormHelperText>Wir werden Ihre E-Mail niemals weitergeben.</FormHelperText>\n  )}\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h3,{id:"deaktiviertes-formularfeld",children:"Deaktiviertes Formularfeld"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl isDisabled>\n  <FormLabel>Benutzername</FormLabel>\n  <Input defaultValue="max.mustermann" />\n  <FormHelperText>Der Benutzername kann nicht ge\xe4ndert werden.</FormHelperText>\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h3,{id:"erforderliches-formularfeld",children:"Erforderliches Formularfeld"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl isRequired>\n  <FormLabel>Passwort</FormLabel>\n  <Input type="password" />\n  <FormHelperText>Das Passwort muss mindestens 8 Zeichen lang sein.</FormHelperText>\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h3,{id:"formularfeld-mit-verschiedenen-gr\xf6\xdfen",children:"Formularfeld mit verschiedenen Gr\xf6\xdfen"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl size="sm">\n  <FormLabel>Klein</FormLabel>\n  <Input placeholder="Kleines Eingabefeld" />\n</FormControl>\n\n<FormControl size="md">\n  <FormLabel>Mittel</FormLabel>\n  <Input placeholder="Mittleres Eingabefeld" />\n</FormControl>\n\n<FormControl size="lg">\n  <FormLabel>Gro\xdf</FormLabel>\n  <Input placeholder="Gro\xdfes Eingabefeld" />\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h3,{id:"formularfeld-mit-verschiedenen-varianten",children:"Formularfeld mit verschiedenen Varianten"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl variant="default">\n  <FormLabel>Standard</FormLabel>\n  <Input placeholder="Standard-Eingabefeld" />\n</FormControl>\n\n<FormControl variant="filled">\n  <FormLabel>Gef\xfcllt</FormLabel>\n  <Input placeholder="Gef\xfclltes Eingabefeld" />\n</FormControl>\n\n<FormControl variant="outlined">\n  <FormLabel>Umrandet</FormLabel>\n  <Input placeholder="Umrandetes Eingabefeld" />\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h3,{id:"formularfeld-mit-verschiedenen-label-positionen",children:"Formularfeld mit verschiedenen Label-Positionen"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl labelPosition="top">\n  <FormLabel>Label oben</FormLabel>\n  <Input placeholder="Label oben" />\n</FormControl>\n\n<FormControl labelPosition="left">\n  <FormLabel>Label links</FormLabel>\n  <Input placeholder="Label links" />\n</FormControl>\n\n<FormControl labelPosition="floating">\n  <Input placeholder="Schwebendes Label" />\n  <FormLabel>Schwebendes Label</FormLabel>\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h3,{id:"formularfeld-mit-erfolgreichem-zustand",children:"Formularfeld mit erfolgreichem Zustand"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl isSuccess>\n  <FormLabel>Benutzername</FormLabel>\n  <Input value="max.mustermann" />\n  <FormHelperText>Benutzername ist verf\xfcgbar!</FormHelperText>\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h2,{id:"props",children:"Props"}),"\n",(0,d.jsx)(r.h3,{id:"formcontrol-1",children:"FormControl"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Prop"}),(0,d.jsx)(r.th,{children:"Typ"}),(0,d.jsx)(r.th,{children:"Standard"}),(0,d.jsx)(r.th,{children:"Beschreibung"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"id"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"string"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"ID f\xfcr das Formularfeld"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"isDisabled"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Deaktiviert das Formularfeld"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"isRequired"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Markiert das Formularfeld als erforderlich"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"isInvalid"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Zeigt den Fehlerzustand an"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"isValid"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Zeigt den g\xfcltigen Zustand an"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"isSuccess"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Zeigt den erfolgreichen Zustand an"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"isReadOnly"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Macht das Formularfeld schreibgesch\xfctzt"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"isLoading"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Zeigt einen Ladezustand an"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"size"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"'xs' | 'sm' | 'md' | 'lg'"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"'md'"})}),(0,d.jsx)(r.td,{children:"Gr\xf6\xdfe des Formularfelds"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"variant"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"'default' | 'filled' | 'outlined' | 'unstyled'"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"'default'"})}),(0,d.jsx)(r.td,{children:"Visuelle Variante des Formularfelds"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"labelPosition"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"'top' | 'left' | 'right' | 'bottom' | 'floating'"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"'top'"})}),(0,d.jsx)(r.td,{children:"Position des Labels"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"string"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Text f\xfcr das Label (Alternative zu FormLabel)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"helperText"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ReactNode"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Hilfetext (Alternative zu FormHelperText)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"errorMessage"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ReactNode"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Fehlermeldung (Alternative zu FormErrorMessage)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"successMessage"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ReactNode"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Erfolgsmeldung"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"name"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"string"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Name des Formularfelds"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"className"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"string"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Zus\xe4tzliche CSS-Klassen"})]})]})]}),"\n",(0,d.jsx)(r.h3,{id:"formlabel",children:"FormLabel"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Prop"}),(0,d.jsx)(r.th,{children:"Typ"}),(0,d.jsx)(r.th,{children:"Standard"}),(0,d.jsx)(r.th,{children:"Beschreibung"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"htmlFor"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"string"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"ID des zugeh\xf6rigen Formularelements"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"requiredIndicator"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ReactNode"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"*"})}),(0,d.jsx)(r.td,{children:"Symbol f\xfcr erforderliche Felder"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"optionalIndicator"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ReactNode"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"(optional)"})}),(0,d.jsx)(r.td,{children:"Text f\xfcr optionale Felder"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"showOptionalIndicator"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"boolean"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Zeigt den optionalen Indikator an"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"className"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"string"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Zus\xe4tzliche CSS-Klassen"})]})]})]}),"\n",(0,d.jsx)(r.h3,{id:"formhelpertext",children:"FormHelperText"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Prop"}),(0,d.jsx)(r.th,{children:"Typ"}),(0,d.jsx)(r.th,{children:"Standard"}),(0,d.jsx)(r.th,{children:"Beschreibung"})]})}),(0,d.jsx)(r.tbody,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"className"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"string"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Zus\xe4tzliche CSS-Klassen"})]})})]}),"\n",(0,d.jsx)(r.h3,{id:"formerrormessage",children:"FormErrorMessage"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Prop"}),(0,d.jsx)(r.th,{children:"Typ"}),(0,d.jsx)(r.th,{children:"Standard"}),(0,d.jsx)(r.th,{children:"Beschreibung"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"icon"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ReactNode"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Icon f\xfcr die Fehlermeldung"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"className"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"string"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"Zus\xe4tzliche CSS-Klassen"})]})]})]}),"\n",(0,d.jsx)(r.h2,{id:"useformcontrol-hook",children:"useFormControl Hook"}),"\n",(0,d.jsxs)(r.p,{children:["Der ",(0,d.jsx)(r.code,{children:"useFormControl"})," Hook erm\xf6glicht den Zugriff auf den FormControl-Context in benutzerdefinierten Komponenten."]}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:"import { useFormControl } from '@smolitux/core';\n\nfunction CustomInput(props) {\n  const { isDisabled, isRequired, isInvalid, id } = useFormControl();\n  \n  return (\n    <input\n      id={id}\n      disabled={isDisabled}\n      required={isRequired}\n      aria-invalid={isInvalid}\n      {...props}\n      className={`custom-input ${isInvalid ? 'custom-input-error' : ''}`}\n    />\n  );\n}\n"})}),"\n",(0,d.jsx)(r.h2,{id:"barrierefreiheit",children:"Barrierefreiheit"}),"\n",(0,d.jsx)(r.p,{children:"Die FormControl-Komponente ist f\xfcr Barrierefreiheit optimiert:"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsx)(r.li,{children:"Korrekte Verkn\xfcpfung von Labels und Formularfeldern \xfcber IDs"}),"\n",(0,d.jsxs)(r.li,{children:["Verwendung von ",(0,d.jsx)(r.code,{children:"aria-invalid"})," f\xfcr Fehlerzust\xe4nde"]}),"\n",(0,d.jsxs)(r.li,{children:["Unterst\xfctzung f\xfcr ",(0,d.jsx)(r.code,{children:"aria-describedby"})," f\xfcr Hilfetexte und Fehlermeldungen"]}),"\n",(0,d.jsx)(r.li,{children:"Visuelles Feedback f\xfcr verschiedene Zust\xe4nde (Fehler, Erfolg, deaktiviert)"}),"\n"]}),"\n",(0,d.jsx)(r.h2,{id:"beispiele",children:"Beispiele"}),"\n",(0,d.jsx)(r.h3,{id:"formular-mit-validierung",children:"Formular mit Validierung"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:"import { useState } from 'react';\nimport { \n  FormControl, \n  FormLabel, \n  FormHelperText, \n  FormErrorMessage,\n  Input,\n  Button\n} from '@smolitux/core';\n\nfunction ValidationForm() {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  \n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  \n  const validate = () => {\n    const newErrors = {};\n    \n    if (!values.name) {\n      newErrors.name = 'Name ist erforderlich';\n    }\n    \n    if (!values.email) {\n      newErrors.email = 'E-Mail ist erforderlich';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      newErrors.email = 'E-Mail ist ung\xfcltig';\n    }\n    \n    if (!values.password) {\n      newErrors.password = 'Passwort ist erforderlich';\n    } else if (values.password.length < 8) {\n      newErrors.password = 'Passwort muss mindestens 8 Zeichen lang sein';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validate()) {\n      setIsSubmitting(true);\n      \n      // Simuliere API-Aufruf\n      setTimeout(() => {\n        alert('Formular erfolgreich abgesendet!');\n        setIsSubmitting(false);\n      }, 1500);\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl isInvalid={!!errors.name} isRequired mb={4}>\n        <FormLabel>Name</FormLabel>\n        <Input\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n        />\n        {errors.name ? (\n          <FormErrorMessage>{errors.name}</FormErrorMessage>\n        ) : (\n          <FormHelperText>Geben Sie Ihren vollst\xe4ndigen Namen ein.</FormHelperText>\n        )}\n      </FormControl>\n      \n      <FormControl isInvalid={!!errors.email} isRequired mb={4}>\n        <FormLabel>E-Mail</FormLabel>\n        <Input\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          onChange={handleChange}\n        />\n        {errors.email ? (\n          <FormErrorMessage>{errors.email}</FormErrorMessage>\n        ) : (\n          <FormHelperText>Wir werden Ihre E-Mail niemals weitergeben.</FormHelperText>\n        )}\n      </FormControl>\n      \n      <FormControl isInvalid={!!errors.password} isRequired mb={6}>\n        <FormLabel>Passwort</FormLabel>\n        <Input\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          onChange={handleChange}\n        />\n        {errors.password ? (\n          <FormErrorMessage>{errors.password}</FormErrorMessage>\n        ) : (\n          <FormHelperText>Das Passwort muss mindestens 8 Zeichen lang sein.</FormHelperText>\n        )}\n      </FormControl>\n      \n      <Button type=\"submit\" isLoading={isSubmitting}>\n        Registrieren\n      </Button>\n    </form>\n  );\n}\n"})}),"\n",(0,d.jsx)(r.h3,{id:"formularfeld-mit-benutzerdefiniertem-label",children:"Formularfeld mit benutzerdefiniertem Label"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'<FormControl>\n  <FormLabel>\n    <div className="flex items-center">\n      <Icon name="user" className="mr-2" />\n      <span>Benutzerprofil</span>\n      <Tooltip content="Informationen zu Ihrem Benutzerprofil">\n        <Icon name="info" className="ml-2 text-gray-400" />\n      </Tooltip>\n    </div>\n  </FormLabel>\n  <Input placeholder="Benutzername" />\n</FormControl>\n'})}),"\n",(0,d.jsx)(r.h3,{id:"formularfeld-mit-charakterz\xe4hler",children:"Formularfeld mit Charakterz\xe4hler"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-jsx",children:'function CharacterCounter() {\n  const [value, setValue] = useState(\'\');\n  const maxLength = 100;\n  \n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  \n  return (\n    <FormControl>\n      <FormLabel>Beschreibung</FormLabel>\n      <Textarea\n        value={value}\n        onChange={handleChange}\n        maxLength={maxLength}\n        placeholder="Beschreiben Sie sich kurz..."\n      />\n      <div className="flex justify-end mt-1 text-sm text-gray-500">\n        {value.length}/{maxLength} Zeichen\n      </div>\n    </FormControl>\n  );\n}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var l=n(6540);const d={},s=l.createContext(d);function i(e){const r=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),l.createElement(s.Provider,{value:r},e.children)}}}]);